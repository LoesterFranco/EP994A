XAS99 CROSS-ASSEMBLER   VERSION 1.7.0
**** **** ****     > boot99105.asm
0001               * Erik Piehl (C) 2016 October
0002               * boot99105.asm
0003               *
0004               * This is a test program intended to test various pieces of
0005               * functionality of the EP994A.
0006               *
0007               * Compile with: xas99.py -b -R -L list.lst boot99105.asm
0008               * Load with:  ../memloader/memloader 0 boot99105_0000.bin
0009               *
0010               
0011                      IDT  'BOOT99'
0012               
0013      8300     WRKSP   EQU   >8300
0014      8320     PRINTWS EQU   >8320
0015      8322     PRTR1P	EQU	  >8322		; Input for PRINTR1
0016      8340     DELAYWS EQU		>8340
0017      8360     TESTLOC EQU   >8360
0018      A040     TMPBUF  EQU   >A040
0019      A000     INTWS   EQU   >A000   ; interrupt workspace
0020               
0021      B000     OUTP  EQU   >B000
0022      8800     VDPRD  EQU  >8800
0023      8802     VDPST  EQU  >8802
0024      8C00     VDPWD  EQU  >8C00             * VDP write data
0025      8C02     VDPWA  EQU  >8C02             * VDP set read/write address
0026               
0027               *---------------------------------------------
0028               * Macro: printString <arg>
0029               * (would be xop <arg>,14 for the TMS9995 BB)
0030               *---------------------------------------------
0035               
0036               *---------------------------------------------
0037               * Macro: printNumber <arg>
0038               * (would be xop <arg>,10 for the TMS9995 BB)
0039               *---------------------------------------------
0044               
0045               *---------------------------------------------
0046               * Macro: printCrLf
0047               *---------------------------------------------
0052               
0053               
0054               *---------------------------------------------
0055               * Macro: printChar <arg>
0056               * (would be xop <arg>,12 for the TMS9995 BB)
0057               *---------------------------------------------
0062               
0063               
0064               ;       AORG  0
0065 0000 8300            DATA WRKSP,BOOT
     0002 0046r
0066 0004 A000            DATA INTWS,VDPINT
     0006 0020r
0067 0008 A000            DATA INTWS,VDPINT
     000A 0020r
0068               
0069 000C 8320     PRINTS	DATA	PRINTWS,GOPRINT
     000E 05CEr
0070 0010 8320     PRINTR1	DATA	PRINTWS,GOPR1
     0012 05BCr
0071 0014 8320     PRINTCH DATA	PRINTWS,GOPRCHAR
     0016 0600r
0072 0018 8320     CLS     DATA  PRINTWS,GOCLS
     001A 0610r
0073               
0074 001C 8340     NICEDELAY DATA	DELAYWS,GODELAY
     001E 063Er
0075               
0076               ; Our interrupt routine
0077               VDPINT
0078 0020 0300  24         LIMI    0
     0022 0000 
0079 0024 0580  14         INC     R0          ; R0 counts interrupts
0080 0026 04CC  14         CLR     R12
0081 0028 3402  64         STCR    R2,0        ; See the TMS9901 register, low 16 bits
0082 002A 1F02  20         TB      2
0083 002C 1603  14         JNE     !ok
0084 002E 0203  20         LI      R3,>FFFF    ; error
     0030 FFFF 
0085 0032 1002  14         JMP     !
0086               !ok
0087 0034 0203  20         LI      R3,>1234    ; OK
     0036 1234 
0088               !
0089 0038 D060  34         MOVB    @VDPST,R1   ; clear the VDP interrupt request
     003A 8802 
0090 003C 0205  20         LI      R5,>100
     003E 0100 
0091 0040 B805  38         AB      R5,@>8379   ; Increment frame counter in scratchpad
     0042 8379 
0092 0044 0380  18         RTWP
0093               
0094               
0095               BOOT
0096 0046 0300  24       LIMI  0
     0048 0000 
0097               ; BOOTLP
0098               ;      JMP   BOOTLP
0099               ;      NOP
0100               ;      NOP
0101               ;      JMP   BOOTLP
0102               
0103 004A 02E0  18       LWPI  WRKSP
     004C 8300 
0104 004E 04E0  34       CLR   @INTWS      ; Zero INTWS.R0, the interrupt counter.
     0050 A000 
0105               
0106               ; Test CB instruction with flag setting
0107 0052 0205  20   LI  R5,>7A9B
     0054 7A9B 
0108 0056 9805  38   CB  R5,@TESTK+1
     0058 068Dr
0109 005A 1201  14   JLE GOGOGO
0110 005C 1000  14   NOP
0111               GOGOGO
0112               
0113 005E D803  38       MOVB  R3,@VDPWD   ; Dummy write to data, to reset latch
     0060 8C00 
0114               ; Write initial values to VDP registers
0115 0062 0201  20       LI    R1,VDPSEQ
     0064 0680r
0116 0066 0202  20       LI    R2,>8000    ; command, write register 0
     0068 8000 
0117               VLP
0118 006A D831  48       MOVB  *R1+,@VDPWA ; write data
     006C 8C02 
0119 006E D802  38       MOVB  R2,@VDPWA   ; write register number
     0070 8C02 
0120 0072 0222  22       AI    R2,>0100    ; next register
     0074 0100 
0121 0076 0282  22       CI    R2,>8800
     0078 8800 
0122 007A 16F7  14       JNE   VLP
0123               
0124               ;;;      JMP SKIP_CLEAR
0125               
0126               ; Clear VDP RAM
0127 007C 04C0  14       CLR   R0
0128 007E 0201  20       LI    R1,>4000
     0080 4000 
0129 0082 06C1  14       SWPB  R1
0130 0084 D801  38       MOVB  R1,@VDPWA   ; Address to zero
     0086 8C02 
0131 0088 06C1  14       SWPB  R1
0132 008A D801  38       MOVB  R1,@VDPWA
     008C 8C02 
0133               !
0134 008E D800  38       MOVB  R0,@VDPWD
     0090 8C00 
0135 0092 0601  14       DEC   R1
0136 0094 16FC  14       JNE   -!
0137               SKIP_CLEAR:
0138 0096 06A0  32       BL    @COPYFONTS
     0098 0556r
0139 009A 04CC  14       CLR   R12         ; CRU pointer
0140 009C 1E00  20       SBZ   0           ; Make sure we are not in timer mode
0141 009E 1D02  20       SBO   2           ; Enable VDP interrupts
0142               ;;;      LIMI  0           ; Don't enable interrupts (BUGBUG)
0143               ;;;      LIMI  2           ; Enable interrupts
0144               ;;;      B   @GODEFENDER
0145               
0146               
0147               ; Initialize color table with >17 times 32
0148 00A0 0200  20       LI    R0,>0380    ; address of color table
     00A2 0380 
0149 00A4 06A0  32       BL		@SETUPVDPA
     00A6 04EEr
0150 00A8 0201  20       LI    R1,32
     00AA 0020 
0151 00AC 0202  20       LI    R2,>1700
     00AE 1700 
0152               !
0153 00B0 D802  38       MOVB  R2,@VDPWD
     00B2 8C00 
0154 00B4 0601  14       DEC   R1
0155 00B6 16FC  14       JNE   -!
0156               
0157 00B8 04E0  34 	  CLR   @PRINTWS
     00BA 8320 
0001 00BC 0420  54 			BLWP	@PRINTS
     00BE 000Cr
0002 00C0 1A8Er    			DATA	HELLO
0001 00C2 0420  54 	    BLWP	@PRINTS
     00C4 000Cr
0002 00C6 0688r      	  DATA	TXTCRLF
0160               
0161               ;--------------------------------------------------------
0162               ; EP 2018-09-23 - run through a sequence of instructions with data and  write
0163               ;	results to RAM. This is to enable comparing the FPGA CPU and TMS9900.
0164 00C8 0205  20 	  LI	R5,>2000			; point to result table
     00CA 2000 
0165 00CC 0207  20 	  LI    R7,TEST_ROUTINES	; point to test routines
     00CE 1B2Er
0166               RUN_TEST
0167 00D0 C237  30 	  MOV	*R7+,R8				; address of routine to test
0168 00D2 0206  20 	  LI    R6,TEST_DATA_SEQ
     00D4 1AEEr
0169               
0170               !
0171 00D6 C076  30 	  MOV	*R6+,R1				; fetch test parameters
0172 00D8 C0B6  30 	  MOV	*R6+,R2
0173 00DA 04C3  14 	  CLR	R3
0174               ; perform operation under test
0175 00DC 0698  24 	  BL    *R8
0176               ; save results
0177 00DE CD41  34 	  MOV	R1,*R5+
0178 00E0 CD42  34 	  MOV   R2,*R5+
0179 00E2 CD43  34 	  MOV   R3,*R5+
0180 00E4 02C3  12 	  STST	R3
0181 00E6 0243  22 	  ANDI	R3,>FC00			; only keep meaningful flags
     00E8 FC00 
0182 00EA CD43  34 	  MOV   R3,*R5+
0183 00EC 0286  22 	  CI	R6,TEST_DEND
     00EE 1B2Er
0184 00F0 16F2  14 	  JNE	-!
0185 00F2 0287  22 	  CI	R7,TEST_ROUT_END
     00F4 1B80r
0186 00F6 16EC  14 	  JNE	RUN_TEST
0187               ; Run a few more extra tests, to test more addressing modes
0188 00F8 8820  54         C   @TEST_DATA_SEQ,@TEST_DATA_SEQ+2
     00FA 1AEEr
     00FC 1AF0r
0189 00FE 02C3  12 	  STST	R3
0190 0100 0243  22 	  ANDI	R3,>FC00
     0102 FC00 
0191 0104 CD43  34 	  MOV   R3,*R5+
0192 0106 9820  54         CB  @TEST_DATA_SEQ+8,@TEST_DATA_SEQ+10
     0108 1AF6r
     010A 1AF8r
0193 010C 02C3  12 	  STST	R3
0194 010E 0243  22 	  ANDI	R3,>FC00
     0110 FC00 
0195 0112 CD43  34 	  MOV   R3,*R5+
0196                       ; Test indexed addressing mode
0197 0114 0206  20         LI    R6,TEST_DATA_SEQ
     0116 1AEEr
0198 0118 C960  54         MOV   @TEST_DATA_SEQ+4,@0(R5)
     011A 1AF2r
     011C 0000 
0199 011E C960  54         MOV   @TEST_DATA_SEQ+6,@2(R5)
     0120 1AF4r
     0122 0002 
0200 0124 6965  54         S     @0(R5),@2(R5)
     0126 0000 
     0128 0002 
0201 012A 02C3  12 	  STST	R3
0202 012C 0243  22 	  ANDI	R3,>FC00
     012E FC00 
0203 0130 CD43  34 	  MOV   R3,*R5+
0204 0132 05C5  14         INCT      R5    ; skip the result of S above
0205               
0206               ; write end marker to memory
0207 0134 0203  20 	  LI	R3,>1234
     0136 1234 
0208 0138 CD43  34 	  MOV	R3,*R5+
0209 013A CD43  34 	  MOV	R3,*R5+
0210 013C CD43  34 	  MOV	R3,*R5+
0211 013E CD43  34 	  MOV	R3,*R5+
0212               
0213 0140 1028  14       JMP		GROM1
0214               
0215 0142 04E0  34       CLR   @PRINTWS    ; Initial display position
     0144 8320 
0216 0146 04C1  14       CLR   R1
0217 0148 0202  20       LI    R2,>1234
     014A 1234 
0218 014C 0203  20       LI    R3,>FFFF
     014E FFFF 
0219 0150 0204  20       LI    R4,>2000
     0152 2000 
0220 0154 0205  20       LI    R5,20
     0156 0014 
0221 0158 0206  20       LI    R6,>DEF0
     015A DEF0 
0222 015C 0207  20       LI    R7,'3'*256
     015E 3300 
0223               LINES1
0001 0160 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     0162 8322 
0002 0164 0420  54 			BLWP	@PRINTR1			; Go print R1
     0166 0010r
0001 0168 D804  38 			MOVB	R4,@PRTR1P
     016A 8322 
0002 016C 0420  54 			BLWP	@PRINTCH
     016E 0014r
0226                     ; LI    R6,24
0227 0170 C181  18       MOV     R1,R6
0228 0172 0586  14       INC     R6
0229               !
0001 0174 D807  38 			MOVB	R7,@PRTR1P
     0176 8322 
0002 0178 0420  54 			BLWP	@PRINTCH
     017A 0014r
0231 017C 0606  14       DEC   R6
0232 017E 16FA  14       JNE   -!
0001 0180 0420  54 	    BLWP	@PRINTS
     0182 000Cr
0002 0184 0688r      	  DATA	TXTCRLF
0234 0186 0581  14       INC    R1
0235 0188 0241  22       ANDI   R1,>1F
     018A 001F 
0236 018C 0281  22       CI     R1,24
     018E 0018 
0237 0190 16E7  14       JNE    LINES1
0238               
0239               
0240               GROM1
0241               ; Test GROM address counter read and write
0242 0192 0200  20       LI    R0,>40
     0194 0040 
0243 0196 C800  38       MOV   R0,@PRINTWS
     0198 8320 
0244 019A 0200  20 			LI		R0,>1234						; write GROM address
     019C 1234 
0245 019E 0209  20       LI    R9,3
     01A0 0003 
0246               !gromloop
0001 01A2 0420  54 			BLWP	@PRINTS
     01A4 000Cr
0002 01A6 1A78r    			DATA	GROMTESTS
0248 01A8 D800  38 			MOVB	R0,@>9C02
     01AA 9C02 
0249 01AC 06C0  14 			SWPB	R0
0250 01AE D800  38 			MOVB	R0,@>9C02
     01B0 9C02 
0251 01B2 06C0  14       SWPB  R0
0252               ; read two bytes GROM
0253 01B4 04C1  14       CLR   R1
0254 01B6 D060  34       MOVB  @>9800,R1
     01B8 9800 
0255 01BA D0A0  34       MOVB  @>9800,R2
     01BC 9800 
0256 01BE 0982  56       SRL   R2,8
0257 01C0 E042  18       SOC   R2,R1
0001 01C2 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     01C4 8322 
0002 01C6 0420  54 			BLWP	@PRINTR1			; Go print R1
     01C8 0010r
0259               ; and read two more bytes GROM
0260 01CA 04C1  14       CLR   R1
0261 01CC D060  34       MOVB  @>9800,R1
     01CE 9800 
0262 01D0 D0A0  34       MOVB  @>9800,R2
     01D2 9800 
0263 01D4 0982  56       SRL   R2,8
0264 01D6 E042  18       SOC   R2,R1
0001 01D8 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     01DA 8322 
0002 01DC 0420  54 			BLWP	@PRINTR1			; Go print R1
     01DE 0010r
0266               ; Now read GROM address and display it
0267 01E0 04C1  14       CLR   R1
0268 01E2 D060  34       MOVB  @>9802,R1
     01E4 9802 
0269 01E6 D0A0  34       MOVB  @>9802,R2
     01E8 9802 
0270 01EA 0982  56       SRL   R2,8
0271 01EC E042  18       SOC   R2,R1
0001 01EE C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     01F0 8322 
0002 01F2 0420  54 			BLWP	@PRINTR1			; Go print R1
     01F4 0010r
0273 01F6 0220  22       AI    R0,>2000    ; next GROM
     01F8 2000 
0274 01FA 0609  14       DEC   R9
0275 01FC 16D2  14       JNE   -!gromloop
0276               
0277               ;-----------------------------------------------
0278               ; Attempt to run a TMS99110 instruction
0279 01FE 0201  20       LI    R1,>180     ; Halfway through the screen
     0200 0180 
0280 0202 C801  38       MOV   R1,@PRINTWS
     0204 8320 
0001 0206 0420  54 			BLWP	@PRINTS
     0208 000Cr
0002 020A 1AB0r    			DATA	TEST_TMS99110
0001 020C 0420  54 	    BLWP	@PRINTS
     020E 000Cr
0002 0210 0688r      	  DATA	TXTCRLF
0283 0212 0205  20       LI   R5,>1234    Arbitrary integer.
     0214 1234 
0284               *       CIR  R5          Convert integer in R5 to real and store in FPAC (R0, R1).
0285               *       Opcode in binary: 0000 1100 1000 0101
0286 0216 0C85           DATA >0C85       Opcode for CIR instruction.
0287               *       XOP @CRLF,14
0288               *       XOP R0,10        Print contents of R0 followed by CRLF.
0289               *       XOP @CRLF,14
0290               *       XOP R1,10        Print contents of R1 followed by CRLF.
0291               *       XOP @CRLF,14
0001 0218 C800  38 			MOV		R0,@PRTR1P		; Store HEX value to print
     021A 8322 
0002 021C 0420  54 			BLWP	@PRINTR1			; Go print R1
     021E 0010r
0001 0220 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     0222 8322 
0002 0224 0420  54 			BLWP	@PRINTR1			; Go print R1
     0226 0010r
0001 0228 0420  54 	    BLWP	@PRINTS
     022A 000Cr
0002 022C 0688r      	  DATA	TXTCRLF
0295               * Next let's make LDS "load distant source operation"
0296 022E 02C0  12       STST  R0    ; read flag register
0001 0230 C800  38 			MOV		R0,@PRTR1P		; Store HEX value to print
     0232 8322 
0002 0234 0420  54 			BLWP	@PRINTR1			; Go print R1
     0236 0010r
0001 0238 0420  54 			BLWP	@PRINTS
     023A 000Cr
0002 023C 1A9Er    			DATA	FLAGS_STRING
0001 023E 0420  54 	    BLWP	@PRINTS
     0240 000Cr
0002 0242 0688r      	  DATA	TXTCRLF
0300               *     LDS
0301 0244 0780           DATA >0780  ; LDS opcode
0302 0246 C020  34       MOV  @>6000,R0    ; Distant load
     0248 6000 
0303 024A C060  34       MOV  @>6000,R1    ; close load
     024C 6000 
0001 024E C800  38 			MOV		R0,@PRTR1P		; Store HEX value to print
     0250 8322 
0002 0252 0420  54 			BLWP	@PRINTR1			; Go print R1
     0254 0010r
0001 0256 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     0258 8322 
0002 025A 0420  54 			BLWP	@PRINTR1			; Go print R1
     025C 0010r
0001 025E 0420  54 	    BLWP	@PRINTS
     0260 000Cr
0002 0262 0688r      	  DATA	TXTCRLF
0307               ; Test macrostore access with MID 0 (opcode 0)
0308 0264 0000     			DATA >0000
0001 0266 0420  54 			BLWP	@PRINTS
     0268 000Cr
0002 026A 1ACEr    			DATA	GOTBACK
0001 026C 0420  54 	    BLWP	@PRINTS
     026E 000Cr
0002 0270 0688r      	  DATA	TXTCRLF
0311               ;-----------------------------------------------
0312               
0313               
0314               ; Try to read keyboard button '1', but first enable VDP interrupts
0315 0272 04CC  14       CLR   R12         ; CRU pointer
0316 0274 1E00  20       SBZ   0           ; Make sure we are not in timer mode
0317 0276 1D02  20       SBO   2           ; Enable VDP interrupts
0318 0278 0300  24       LIMI  2           ; Enable interrupts
     027A 0002 
0319               
0320 027C 0203  20       LI    R3,25000
     027E 61A8 
0321 0280 04C0  14 !k    CLR   R0
0322 0282 C800  38       MOV   R0,@PRINTWS
     0284 8320 
0323               !
0324 0286 020C  20       LI    R12,>24
     0288 0024 
0325 028A 30C0  56       LDCR  R0,3
0326 028C 020C  20       LI    R12,6        ; Address to read rows
     028E 0006 
0327 0290 3601  64       STCR  R1,8
0001 0292 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     0294 8322 
0002 0296 0420  54 			BLWP	@PRINTR1			; Go print R1
     0298 0010r
0001 029A 0420  54 	    BLWP	@PRINTS
     029C 000Cr
0002 029E 0688r      	  DATA	TXTCRLF
0330 02A0 0220  22       AI    R0,>100
     02A2 0100 
0331 02A4 0280  22       CI    R0,>600
     02A6 0600 
0332 02A8 16EE  14       JNE   -!
0333 02AA C060  34       MOV   @INTWS,R1   ; Interrupt counter
     02AC A000 
0001 02AE C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     02B0 8322 
0002 02B2 0420  54 			BLWP	@PRINTR1			; Go print R1
     02B4 0010r
0001 02B6 0420  54 	    BLWP	@PRINTS
     02B8 000Cr
0002 02BA 0688r      	  DATA	TXTCRLF
0001 02BC 0420  54 			BLWP	@PRINTS
     02BE 000Cr
0002 02C0 1A6Br    			DATA	CRU0STR
0337 02C2 C060  34       MOV   @INTWS+4,R1 ; read reg 2 from interrupt context (CRU bits)
     02C4 A004 
0001 02C6 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     02C8 8322 
0002 02CA 0420  54 			BLWP	@PRINTR1			; Go print R1
     02CC 0010r
0001 02CE 0420  54 	    BLWP	@PRINTS
     02D0 000Cr
0002 02D2 0688r      	  DATA	TXTCRLF
0340 02D4 C060  34       MOV   @INTWS+6,R1 ; Also show reg 3
     02D6 A006 
0001 02D8 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     02DA 8322 
0002 02DC 0420  54 			BLWP	@PRINTR1			; Go print R1
     02DE 0010r
0001 02E0 0420  54 	    BLWP	@PRINTS
     02E2 000Cr
0002 02E4 0688r      	  DATA	TXTCRLF
0343 02E6 04CC  14       CLR   R12
0344 02E8 3401  64       STCR  R1,0       ; Read 16 bits (count of 0 means 16)
0001 02EA C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     02EC 8322 
0002 02EE 0420  54 			BLWP	@PRINTR1			; Go print R1
     02F0 0010r
0001 02F2 0420  54 	    BLWP	@PRINTS
     02F4 000Cr
0002 02F6 0688r      	  DATA	TXTCRLF
0347 02F8 0205  20       LI R5,100
     02FA 0064 
0348 02FC 0206  20       LI R6,7
     02FE 0007 
0349 0300 3946  56       MPY R6,R5
0001 0302 C805  38 			MOV		R5,@PRTR1P		; Store HEX value to print
     0304 8322 
0002 0306 0420  54 			BLWP	@PRINTR1			; Go print R1
     0308 0010r
0001 030A C806  38 			MOV		R6,@PRTR1P		; Store HEX value to print
     030C 8322 
0002 030E 0420  54 			BLWP	@PRINTR1			; Go print R1
     0310 0010r
0001 0312 0420  54 	    BLWP	@PRINTS
     0314 000Cr
0002 0316 0688r      	  DATA	TXTCRLF
0353               ; EP 2017-08-01 What the heck?
0354               ; TI ROM seems to use also ODD addressed INCT and DECT instructions
0355               ; For example: 0848: DECT @>8373
0356               ; I wonder what that does with a real CPU and with the VHDL CPU...
0357               ; We need to check.
0358 0318 0205  20 		LI R5,>0000
     031A 0000 
0359 031C C805  38 		MOV R5,@TESTLOC
     031E 8360 
0360 0320 C060  34 		MOV @TESTLOC,R1
     0322 8360 
0001 0324 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     0326 8322 
0002 0328 0420  54 			BLWP	@PRINTR1			; Go print R1
     032A 0010r
0362 032C 0660  34 		DECT @TESTLOC+1
     032E 8361 
0363 0330 C060  34 		MOV @TESTLOC,R1
     0332 8360 
0001 0334 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     0336 8322 
0002 0338 0420  54 			BLWP	@PRINTR1			; Go print R1
     033A 0010r
0365 033C 05E0  34 		INCT @TESTLOC+1
     033E 8361 
0366 0340 C060  34 		MOV @TESTLOC,R1
     0342 8360 
0001 0344 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     0346 8322 
0002 0348 0420  54 			BLWP	@PRINTR1			; Go print R1
     034A 0010r
0001 034C 0420  54 	    BLWP	@PRINTS
     034E 000Cr
0002 0350 0688r      	  DATA	TXTCRLF
0369               
0370               
0371 0352 0603  14       DEC   R3
0372 0354 1695  14       JNE   -!k
0373               
0374               
0375               GODEFENDER
0376               ; Check if we have defender loaded. If we have let's go!
0377 0356 C060  34       MOV   @>6000,R1
     0358 6000 
0378 035A 0281  22       CI     R1,>AA01
     035C AA01 
0379 035E 1607  14       JNE   !
0380 0360 C060  34       MOV   @>600E,R1
     0362 600E 
0381 0364 0281  22       CI    R1,>6072
     0366 6072 
0382 0368 1602  14       JNE   !
0383 036A 0460  28       B     @>6072
     036C 6072 
0384               !
0385               
0386               ;;			BLWP	@NICEDELAY
0387               ; Do test of GROM memory. Calculate GROM checksums
0388               GROMCHECK
0389               ;;			BLWP	@CLS
0390               ;;			CLR		R0
0391               ;;			MOV		R0,@PRINTWS
0001 036E 0420  54 			BLWP	@PRINTS
     0370 000Cr
0002 0372 1A55r    			DATA	GTT
0393               
0394               ; Start of checksum loop
0395 0374 0204  20 			LI		R4,3					; Iteration counter
     0376 0003 
0396               !gr3
0397 0378 04C0  14 			CLR		R0
0398               !gr2
0399 037A D800  38 			MOVB	R0,@>9C02				; Setup GROM address to zero
     037C 9C02 
0400 037E 06C0  14 			SWPB	R0
0401 0380 D800  38 			MOVB	R0,@>9C02
     0382 9C02 
0402 0384 06C0  14       SWPB  R0
0001 0386 C800  38 			MOV		R0,@PRTR1P		; Store HEX value to print
     0388 8322 
0002 038A 0420  54 			BLWP	@PRINTR1			; Go print R1
     038C 0010r
0404               
0405 038E 04C1  14       CLR		R1						; init checksum
0406 0390 0202  20       LI		R2,>1800
     0392 1800 
0407               !grr
0408 0394 04C3  14       CLR		R3
0409 0396 D0E0  34       MOVB	@>9800,R3			; get byte
     0398 9800 
0410 039A 0B11  56       SRC		R1,1
0411 039C A043  18 			A			R3,R1
0412 039E 0602  14 			DEC		R2
0413 03A0 16F9  14 			JNE		-!grr
0001 03A2 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     03A4 8322 
0002 03A6 0420  54 			BLWP	@PRINTR1			; Go print R1
     03A8 0010r
0415               			; Get address and print it
0416 03AA 04C1  14       CLR   R1
0417 03AC D060  34       MOVB  @>9802,R1
     03AE 9802 
0418 03B0 D0A0  34       MOVB  @>9802,R2
     03B2 9802 
0419 03B4 0982  56       SRL   R2,8
0420 03B6 E042  18       SOC   R2,R1
0001 03B8 C801  38 			MOV		R1,@PRTR1P		; Store HEX value to print
     03BA 8322 
0002 03BC 0420  54 			BLWP	@PRINTR1			; Go print R1
     03BE 0010r
0001 03C0 0420  54 	    BLWP	@PRINTS
     03C2 000Cr
0002 03C4 0688r      	  DATA	TXTCRLF
0423               
0424 03C6 0220  22 			AI		R0,>2000
     03C8 2000 
0425 03CA 0280  22 			CI		R0,>6000
     03CC 6000 
0426 03CE 16D5  14 			JNE		-!gr2
0427               
0428 03D0 0604  14 			DEC		R4
0429 03D2 16D2  14 			JNE		-!gr3				; next iteration
0430               
0431 03D4 0420  54 			BLWP	@NICEDELAY
     03D6 001Cr
0432               
0433               
0434 03D8 102C  14       JMP   MAINSTART
0435               
0436               NOCLEAR
0437               ; Write fonts
0438 03DA 0202  20       LI    R2,CHARS
     03DC 0660r
0439 03DE 0201  20       LI    R1,ENDCHARS-CHARS ; count
     03E0 0020 
0440 03E2 0203  20       LI    R3,>4300    ; address 300
     03E4 4300 
0441 03E6 06C3  14       SWPB  R3
0442 03E8 D803  38       MOVB  R3,@VDPWA   ; low byte of address
     03EA 8C02 
0443 03EC 06C3  14       SWPB  R3
0444 03EE D803  38       MOVB  R3,@VDPWA   ; high byte of address
     03F0 8C02 
0445               
0446 03F2 D832  48 !     MOVB  *R2+,@VDPWD
     03F4 8C00 
0447 03F6 0601  14       DEC   R1
0448 03F8 16FC  14       JNE   -!
0449               
0450               TESTCHARS
0451               ; write a few characters
0452 03FA 0203  20       LI    R3,>4000    ; address 0
     03FC 4000 
0453 03FE 06C3  14       SWPB  R3
0454 0400 D803  38       MOVB  R3,@VDPWA   ; low byte of address
     0402 8C02 
0455 0404 06C3  14       SWPB  R3
0456 0406 D803  38       MOVB  R3,@VDPWA   ; high byte of address
     0408 8C02 
0457               
0458 040A 0205  20       LI    R5,>80
     040C 0080 
0459               LPLP
0460 040E 0200  20       LI    R0,>2021    ; >6061
     0410 2021 
0461 0412 D800  38       MOVB  R0,@VDPWD
     0414 8C00 
0462 0416 06C0  14       SWPB  R0
0463 0418 D800  38       MOVB  R0,@VDPWD
     041A 8C00 
0464 041C 06C0  14       SWPB  R0
0465 041E 0200  20       LI    R0,>3031     ;>6263
     0420 3031 
0466 0422 D800  38       MOVB  R0,@VDPWD
     0424 8C00 
0467 0426 06C0  14       SWPB  R0
0468 0428 D800  38       MOVB  R0,@VDPWD
     042A 8C00 
0469 042C 06C0  14       SWPB  R0
0470 042E 0605  14       DEC   R5
0471 0430 16EE  14       JNE   LPLP
0472               
0473               
0474               MAINSTART
0475 0432 0201  20       LI    R1,OUTP
     0434 B000 
0476 0436 0200  20       LI    R0,>100
     0438 0100 
0477 043A 0203  20       LI    R3,20
     043C 0014 
0478               
0479               MAINLOOP
0480 043E D440  30       MOVB  R0,*R1
0481 0440 0A10  56       SLA   R0,1
0482 0442 1602  14       JNE   !
0483 0444 0200  20       LI    R0,>100
     0446 0100 
0484 0448 04C2  14 !     CLR   R2
0485               !delay
0486 044A 0602  14       DEC   R2
0487 044C 16FE  14       JNE   -!delay
0488 044E 0603  14       DEC   R3
0489 0450 16F6  14       JNE   MAINLOOP
0490               ; Copy the dump to VDP memory
0491 0452 0200  20       LI    R0,0
     0454 0000 
0492 0456 06A0  32       BL    @SETUPVDPA
     0458 04EEr
0493 045A 0201  20       LI    R1,VDPDUMP
     045C 0F26r
0494 045E 0202  20       LI    R2,DUMPEND-VDPDUMP
     0460 0B10 
0495               VCOPYLP
0496 0462 D831  48       MOVB  *R1+,@VDPWD
     0464 8C00 
0497 0466 0602  14       DEC   R2
0498               ;      MOVB  *R1+,@VDPWD
0499               ;      MOVB  *R1+,@VDPWD
0500               ;      DECT  R2
0501 0468 16FC  14       JNE   VCOPYLP
0502               
0503               ; Now delay loop
0504 046A 0201  20       LI    R1,10
     046C 000A 
0505 046E 0602  14 !     DEC   R2
0506 0470 16FE  14       JNE   -!
0507 0472 0601  14       DEC   R1
0508 0474 16FC  14       JNE   -!
0509               ; Make a small animation
0510 0476 0204  20       LI    R4,VDPDUMP+768-32 ; -32 for message
     0478 1206r
0511 047A 0205  20       LI    R5,0            ; Scroll offset
     047C 0000 
0512 047E 0206  20       LI    R6,0
     0480 0000 
0513 0482 0208  20       LI    R8,32
     0484 0020 
0514 0486 C081  18       MOV   R1,R2
0515               
0516 0488 0209  20       LI    R9,10000         ; our delay
     048A 2710 
0517               
0518               !again
0519 048C 0201  20       LI    R1,VDPDUMP
     048E 0F26r
0520 0490 04C0  14       CLR   R0
0521 0492 06A0  32       BL    @SETUPVDPA
     0494 04EEr
0522               ; Animate 1 row
0523               !row
0524 0496 C1C6  18       MOV   R6,R7
0525 0498 A1C5  18       A     R5,R7
0526 049A 0247  22       ANDI  R7,>1F
     049C 001F 
0527 049E A1C1  18       A     R1,R7
0528 04A0 D817  46       MOVB  *R7,@VDPWD
     04A2 8C00 
0529 04A4 0586  14       INC   R6          ; R6 counts our columns
0530 04A6 8206  18       C     R6,R8
0531 04A8 16F6  14       JNE   -!row
0532 04AA 04C6  14       CLR   R6
0533 04AC 0221  22       AI    R1,32
     04AE 0020 
0534 04B0 8101  18       C     R1,R4
0535 04B2 16F1  14       JNE   -!row
0536               ; Increment our offset
0537 04B4 0585  14       INC   R5
0538 04B6 0245  22       ANDI  R5,31
     04B8 001F 
0539               ; Make our small delay
0540 04BA 0289  22       CI    R9,0
     04BC 0000 
0541 04BE 13E6  14       JEQ   -!again   ; if delay is zero, no more printing
0542               
0543 04C0 C1C9  18       MOV   R9,R7
0544 04C2 0607  14 !del  DEC   R7
0545 04C4 16FE  14       JNE   -!del
0546               
0547               ; decrement delay
0548 04C6 0229  22       AI    R9,-10
     04C8 FFF6 
0549               ; Display a message from our sponsor
0550 04CA 0200  20       LI    R0,23*32
     04CC 02E0 
0551 04CE C800  38       MOV   R0,@PRINTWS
     04D0 8320 
0001 04D2 0420  54 			BLWP	@PRINTS
     04D4 000Cr
0002 04D6 1A36r    			DATA	TMS99105
0001 04D8 C809  38 			MOV		R9,@PRTR1P		; Store HEX value to print
     04DA 8322 
0002 04DC 0420  54 			BLWP	@PRINTR1			; Go print R1
     04DE 0010r
0001 04E0 0420  54 			BLWP	@PRINTS
     04E2 000Cr
0002 04E4 1A52r    			DATA	SPACES
0555               ; Proceed to second row directly
0556 04E6 0221  22       AI    R1,32
     04E8 0020 
0557               
0558               
0559 04EA 10D0  14       JMP   -!again
0560               
0561               
0562               
0563               
0564 04EC 10A2  14       JMP   MAINSTART
0565               
0566               *---------------------------------------------
0567               * Set VDP address from R0
0568               *---------------------------------------------
0569               SETUPVDPA
0570 04EE 0240  22       ANDI  R0,>3FFF
     04F0 3FFF 
0571 04F2 06C0  14       SWPB  R0
0572 04F4 D800  38       MOVB  R0,@VDPWA         * Send low byte of VDP RAM write address
     04F6 8C02 
0573 04F8 06C0  14       SWPB  R0
0574 04FA 0260  22       ORI   R0,>4000          * Set read/write bits 14 and 15 to write (01)
     04FC 4000 
0575 04FE D800  38       MOVB  R0,@VDPWA         * Send high byte of VDP RAM write address
     0500 8C02 
0576 0502 045B  20       RT
0577               
0578               *---------------------------------------------
0579               * Scroll up - test VDP reads
0580               * For reads top 2 bits are zero
0581               *---------------------------------------------
0582               SCROLLUP
0583 0504 C28B  18       MOV   R11,R10           * Save return address
0584 0506 0206  20       LI    R6,>20            * VRAM read address
     0508 0020 
0585 050A 04C0  14       CLR   R0                * VRAM write address
0586 050C 0207  20       LI    R7,23             * 23 lines
     050E 0017 
0587               
0588               !scrollloop
0589 0510 06C6  14       SWPB  R6
0590 0512 D806  38       MOVB  R6,@VDPWA         * Send low byte of VDP RAM read address
     0514 8C02 
0591 0516 06C6  14       SWPB  R6
0592 0518 D806  38       MOVB  R6,@VDPWA
     051A 8C02 
0593 051C 0202  20       LI    R2,>20
     051E 0020 
0594 0520 0205  20       LI    R5,TMPBUF
     0522 A040 
0595 0524 0201  20       LI    R1,VDPRD          * VDP read address
     0526 8800 
0596               !rdloop
0597 0528 DD51  40       MOVB  *R1,*R5+          * read byte from VRAM
0598 052A DD51  40       MOVB  *R1,*R5+          * read byte from VRAM
0599 052C 0642  14       DECT  R2
0600 052E 16FC  14       JNE   -!rdloop
0601               ; Next write the same stuff to the previous line
0602 0530 06A0  32       BL    @SETUPVDPA
     0532 04EEr
0603 0534 0202  20       LI    R2,>20
     0536 0020 
0604 0538 0205  20       LI    R5,TMPBUF
     053A A040 
0605 053C 0201  20       LI    R1,VDPWD          * VDP read address
     053E 8C00 
0606               !wrloop
0607 0540 D475  40       MOVB  *R5+,*R1
0608 0542 D475  40       MOVB  *R5+,*R1
0609 0544 0642  14       DECT  R2
0610 0546 16FC  14       jne   -!wrloop
0611 0548 0220  22       AI    R0,>20
     054A 0020 
0612 054C 0226  22       AI    R6,>20
     054E 0020 
0613 0550 0607  14       DEC   R7
0614 0552 16DE  14       JNE   -!scrollloop
0615 0554 045A  20       B     *R10            * Return
0616               
0617               * copy fonts from GROMs to pattern table
0618               COPYFONTS
0619 0556 C28B  18       MOV   R11,R10     ; Save return address
0620 0558 0200  20       LI    R0,>6B4         * setup GROM source address of font table
     055A 06B4 
0621 055C 0207  20       LI    R7,GROM0
     055E 068Er
0622 0560 A1C0  18       A     R0,R7
0623               ;      MOVB    R0,@>9C02
0624               ;      SWPB    R0
0625               ;      MOVB    R0,@>9C02
0626 0562 0200  20       LI      R0,>800+(32*8)          * destination address in VRAM
     0564 0900 
0627 0566 06A0  32       BL      @SETUPVDPA
     0568 04EEr
0628 056A 0200  20       LI      R0,62                                                   * 62 characters to copy
     056C 003E 
0629 056E 04C2  14       CLR     R2
0630               !ch2
0631 0570 0201  20       LI      R1,7                                                    * 7 bytes per char
     0572 0007 
0632               !char
0633 0574 D837  48       MOVB    *R7+,@VDPWD        * move byte from GROM to VDP
     0576 8C00 
0634 0578 0601  14       DEC     R1
0635 057A 16FC  14       JNE     -!char
0636 057C D802  38       MOVB    R2,@VDPWD                                 * 8th byte just zero
     057E 8C00 
0637 0580 0600  14       DEC     R0
0638 0582 16F6  14       JNE     -!ch2
0639 0584 045A  20       B     *R10    ; return
0640               
0641               
0642               HEXWORD	; EP display R1 in hex in the current VDP location
0643 0586 0203  20 			LI	R3,4
     0588 0004 
0644               HEXLOOP
0645 058A C28B  18 		  MOV R11,R10
0646 058C C081  18 			MOV	R1,R2
0647 058E 06A0  32 !			BL	@HEXNIBBLE
     0590 05A2r
0648 0592 0A42  56 			SLA	R2,4
0649 0594 C042  18 			MOV	R2,R1
0650 0596 0603  14 			DEC	R3
0651 0598 16FA  14 			JNE	-!
0652 059A 045A  20 			B 	*R10
0653               
0654               HEXBYTE	; Display most significant byte of R1 in the current VDP location
0655 059C 0203  20 			LI 	R3,2
     059E 0002 
0656 05A0 10F4  14 			JMP	HEXLOOP
0657               
0658               
0659               HEXNIBBLE	; EP display top 4 bits of R1 in current VDP RAM location
0660 05A2 0941  56 			SRL 	R1,4
0661 05A4 0241  22 			ANDI 	R1,>0F00
     05A6 0F00 
0662 05A8 0221  22 			AI		R1,>3000	; Convert to ASCII
     05AA 3000 
0663 05AC 0281  22 			CI		R1,>3A00
     05AE 3A00 
0664 05B0 1A02  14 			JL		!
0665 05B2 0221  22 			AI		R1,>0700
     05B4 0700 
0666 05B6 D801  38 !     MOVB  R1,@VDPWD
     05B8 8C00 
0667 05BA 045B  20 			RT
0668               
0669               *--------------------------------------------
0670               * GOPR1
0671               * Print contents of R1 in the PRINTWS
0672               * workspace.
0673               *--------------------------------------------
0674               GOPR1
0675 05BC 0300  24 			LIMI	0
     05BE 0000 
0676 05C0 06A0  32 			BL		@SETUPVDPA		; Setup dest address
     05C2 04EEr
0677 05C4 06A0  32 			BL		@HEXWORD			; print
     05C6 0586r
0678 05C8 0220  22 			AI		R0,4					; Advance VDP ptr
     05CA 0004 
0679 05CC 0380  18 			RTWP
0680               
0681               *--------------------------------------------
0682               * *** Print a string ***
0683               * Entered with BLWP, so return with RTWP
0684               * PC points to string pointer, so use R14
0685               * to access it and inc R14 past it.
0686               * R0 in this workspace is VDP RAM pointer.
0687               *--------------------------------------------
0688               GOPRINT
0689 05CE 0300  24 				LIMI	0						; no more interrupts until RTWP
     05D0 0000 
0690 05D2 C07E  30 			  MOV		*R14+,R1		; Fetch string pointer to R1
0691 05D4 06A0  32 			  BL		@SETUPVDPA
     05D6 04EEr
0692 05D8 D0B1  28 !				MOVB	*R1+,R2
0693 05DA 1311  14 				JEQ		!done				; zero ends -> !done
0694 05DC 0282  22 				CI		R2,>0D00
     05DE 0D00 
0695 05E0 13FB  14 				JEQ		-!					; Skip 0xD's
0696 05E2 0282  22 				CI		R2,>0A00    ; is it linefeed?
     05E4 0A00 
0697 05E6 1607  14 				JNE		!write			; no -> !write
0698               ; Here we are with a linefeed. Update to next line.
0699 05E8 0220  22 				AI		R0,32
     05EA 0020 
0700 05EC 0240  22 				ANDI	R0,>FFE0
     05EE FFE0 
0701 05F0 06A0  32 				BL		@SETUPVDPA
     05F2 04EEr
0702 05F4 10F1  14 				JMP		-!
0703               ; Write the character to the VDP
0704               !write
0705 05F6 0580  14 				INC	  R0					; update our VDP address
0706 05F8 D802  38 				MOVB	R2,@VDPWD
     05FA 8C00 
0707 05FC 10ED  14 				JMP		-!
0708               !done
0709 05FE 0380  18   		  RTWP
0710               
0711               *--------------------------------------------
0712               * GOPRCHAR
0713               * Print a character from R1 high byte, PRINTWS
0714               * workspace.
0715               *--------------------------------------------
0716               GOPRCHAR
0717 0600 0300  24 			LIMI 	0
     0602 0000 
0718 0604 06A0  32 			BL		@SETUPVDPA		; Setup dest address
     0606 04EEr
0719 0608 0580  14 			INC	  R0						; update our VDP address
0720 060A D801  38 			MOVB	R1,@VDPWD
     060C 8C00 
0721 060E 0380  18 			RTWP
0722               
0723               *--------------------------------------------
0724               * CLS
0725               * Clear the screen. Enter with BLWP
0726               *--------------------------------------------
0727               GOCLS
0728 0610 0300  24        LIMI 0
     0612 0000 
0729 0614 04C0  14        CLR  R0                * Start at top left corner of the screen
0730 0616 0201  20        LI   R1,>2000          * Write a space (>20 hex is 32 decimal)
     0618 2000 
0731 061A 0202  20        LI   R2,768            * Number of bytes to write
     061C 0300 
0732               
0733 061E D820  54        MOVB @PRINTWS+1,@VDPWA ;* Send low byte of VDP RAM write address
     0620 8321 
     0622 8C02 
0734 0624 0260  22        ORI  R0,>4000          * Set read/write bits 14 and 15 to write (01)
     0626 4000 
0735 0628 D800  38        MOVB R0,@VDPWA         * Send high byte of VDP RAM write address
     062A 8C02 
0736               
0737 062C D801  38 !      MOVB R1,@VDPWD         * Write byte to VDP RAM
     062E 8C00 
0738 0630 0602  14        DEC  R2                * Byte counter
0739 0632 16FC  14        JNE  -!                * Check if done
0740               
0741 0634 0200  20        LI   R0,1              * second column
     0636 0001 
0742 0638 06A0  32        BL   @SETUPVDPA
     063A 04EEr
0743 063C 0380  18        RTWP
0744               
0745               *--------------------------------------------
0746               * DELAY that takes enough time for a human
0747               * to see something on the screen.
0748               * Enter with BLWP
0749               *--------------------------------------------
0750               GODELAY
0751               ; Stop here for a while
0752 063E 04C0  14       CLR   R0
0753 0640 0201  20       LI    R1,10
     0642 000A 
0754               !mydelay
0755 0644 0600  14       DEC   R0
0756 0646 16FE  14       JNE   -!mydelay
0757 0648 0601  14       DEC   R1
0758 064A 16FC  14       JNE   -!mydelay
0759               ; Next scroll the screen up
0760 064C 06A0  32       BL    @SCROLLUP
     064E 0504r
0761               ; Stop here for a while
0762 0650 04C0  14       CLR   R0
0763 0652 0201  20       LI    R1,10
     0654 000A 
0764               !mydelay
0765 0656 0600  14       DEC   R0
0766 0658 16FE  14       JNE   -!mydelay
0767 065A 0601  14       DEC   R1
0768 065C 16FC  14       JNE   -!mydelay
0769 065E 0380  18 			RTWP
0770               
0771                     EVEN
0772               CHARS
0773 0660 0000           BYTE  0,0,0,0,0,0,0,0
     0662 0000 
     0664 0000 
     0666 0000 
0774 0668 0018           BYTE  >00,>18,>24,>42,>42,>7E,>42,>42
     066A 2442 
     066C 427E 
     066E 4242 
0775 0670 8080           BYTE  >80,>80,>80,>80,>80,>80,>80,>80
     0672 8080 
     0674 8080 
     0676 8080 
0776 0678 0103           BYTE  >01,>03,>01,>01,>01,>01,>01,>01
     067A 0101 
     067C 0101 
     067E 0101 
0777                     EVEN
0778               ENDCHARS
0779               ; Initial VDP register values
0780               VDPSEQ
0781 0680 00E0           BYTE  >00,>E0,>00,>0E    ; Interrupts enabled
     0682 000E 
0782               ;      BYTE  >00,>C0,>00,>0E     ; Interrupts disabled
0783 0684 0106           BYTE  >01,>06,>00,>F7
     0686 00F7 
0784               TXTCRLF
0785 0688 0D0A     		BYTE >0D,>0A
0786 068A 0000     		BYTE >00
0787                   EVEN
0788               
0789               TESTK
0790 068C 8090       DATA >8090
0791               
0792               
0793 068E AA02     GROM0 BCOPY "GROMSMAL.BIN"
     0690 0000 
     0692 0000 
     0694 0000 
     0696 1310 
     0698 1320 
     069A 0000 
     069C 0000 
     069E 43DC 
     06A0 443C 
     06A2 49A9 
     06A4 4396 
     06A6 439E 
     06A8 4446 
     06AA 4449 
     06AC 444C 
     06AE 4052 
     06B0 51FE 
     06B2 4C82 
     06B4 4D59 
     06B6 4DB4 
     06B8 4E64 
     06BA 4EF9 
     06BC 4F01 
     06BE 4F5F 
     06C0 4F80 
     06C2 43CE 
     06C4 43D6 
     06C6 054D 
     06C8 1252 
     06CA 5E44 
     06CC 1705 
     06CE 2844 
     06D0 0537 
     06D2 B460 
     06D4 0D00 
     06D6 1100 
     06D8 43C2 
     06DA 04B4 
     06DC 06B4 
     06DE 0874 
     06E0 8780 
     06E2 CEBE 
     06E4 8F11 
     06E6 0070 
     06E8 BE81 
     06EA 009F 
     06EC BE81 
     06EE 00BF 
     06F0 BE81 
     06F2 00DF 
     06F4 BE81 
     06F6 00FF 
     06F8 BF72 
     06FA FF7E 
     06FC 3900 
     06FE 0800 
     0700 0451 
     0702 8600 
     0704 3500 
     0706 7101 
     0708 0035 
     070A 003E 
     070C 8082 
     070E 0035 
     0710 000B 
     0712 7400 
     0714 3500 
     0716 0880 
     0718 C200 
     071A BF03 
     071C 0308 
     071E F602 
     0720 03BF 
     0722 0310 
     0724 01F6 
     0726 0203 
     0728 BE03 
     072A 18F6 
     072C 0203 
     072E 8400 
     0730 BE03 
     0732 02F6 
     0734 0203 
     0736 BE03 
     0738 01F6 
     073A 0203 
     073C BF03 
     073E 1602 
     0740 F602 
     0742 0306 
     0744 03CE 
     0746 86A0 
     0748 00BE 
     074A 7010 
     074C BEB0 
     074E 70A0 
     0750 8EA0 
     0752 0040 
     0754 DC39 
     0756 0001 
     0758 0104 
     075A 4F86 
     075C B070 
     075E A070 
     0760 70D6 
     0762 7040 
     0764 40BE 
     0766 BE80 
     0768 FD08 
     076A 9370 
     076C 3900 
     076E 0101 
     0770 0244 
     0772 86A0 
     0774 0035 
     0776 0FFF 
     0778 A001 
     077A A000 
     077C 3100 
     077E 20A3 
     0780 8004 
     0782 5931 
     0784 0200 
     0786 A900 
     0788 04B4 
     078A 3100 
     078C 50A8 
     078E 0809 
     0790 5007 
     0792 20BE 
     0794 7E05 
     0796 BC74 
     0798 7E03 
     079A 927E 
     079C 4108 
     079E 877E 
     07A0 BE75 
     07A2 6008 
     07A4 C1E0 
     07A6 75FB 
     07A8 0117 
     07AA B09D 
     07AC C1E0 
     07AE 75FB 
     07B0 011F 
     07B2 FBA6 
     07B4 7E12 
     07B6 A275 
     07B8 08D6 
     07BA 75E0 
     07BC 4115 
     07BE D67E 
     07C0 0341 
     07C2 1287 
     07C4 7E08 
     07C6 A48E 
     07C8 0201 
     07CA 0203 
     07CC 9C02 
     07CE 0405 
     07D0 069C 
     07D2 0207 
     07D4 0809 
     07D6 A78F 
     07D8 1B52 
     07DA 4541 
     07DC 4459 
     07DE 2D50 
     07E0 5245 
     07E2 5353 
     07E4 2041 
     07E6 4E59 
     07E8 204B 
     07EA 4559 
     07EC 2054 
     07EE 4F20 
     07F0 4245 
     07F2 4749 
     07F4 4EFB 
     07F6 3100 
     07F8 11A1 
     07FA 2804 
     07FC 9631 
     07FE 0018 
     0800 A2C4 
     0802 048F 
     0804 3100 
     0806 0DA1 
     0808 6A04 
     080A A7BE 
     080C 4310 
     080E 0603 
     0810 7C87 
     0812 80D0 
     0814 8655 
     0816 BE6D 
     0818 040F 
     081A 1961 
     081C 8BBF 
     081E 7200 
     0820 80BF 
     0822 9072 
     0824 01A2 
     0826 0F1A 
     0828 BD90 
     082A 7390 
     082C 7296 
     082E 7200 
     0830 8F80 
     0832 D041 
     0834 8F39 
     0836 0001 
     0838 0104 
     083A 5086 
     083C 7402 
     083E FF03 
     0840 41AF 
     0842 0603 
     0844 CE07 
     0846 20BE 
     0848 72FE 
     084A BE6D 
     084C 0686 
     084E 6C86 
     0850 80FB 
     0852 3100 
     0854 1EA4 
     0856 0060 
     0858 00BE 
     085A 80FB 
     085C 0431 
     085E 001E 
     0860 A420 
     0862 6000 
     0864 8658 
     0866 8659 
     0868 0501 
     086A DF90 
     086C 59CE 
     086E 591D 
     0870 61F0 
     0872 D4E4 
     0874 0058 
     0876 E420 
     0878 5841 
     087A F205 
     087C 01DD 
     087E 4200 
     0880 9472 
     0882 8790 
     0884 7294 
     0886 72BF 
     0888 9072 
     088A 12A5 
     088C 906C 
     088E D68F 
     0890 DD00 
     0892 AA42 
     0894 27BD 
     0896 588F 
     0898 DD06 
     089A 8F58 
     089C 6227 
     089E 9472 
     08A0 BF90 
     08A2 72FF 
     08A4 FF94 
     08A6 72BD 
     08A8 9072 
     08AA 5890 
     08AC 6CBD 
     08AE 58CF 
     08B0 7D00 
     08B2 5842 
     08B4 0C94 
     08B6 7287 
     08B8 9072 
     08BA 0F1A 
     08BC 6227 
     08BE 9672 
     08C0 D702 
     08C2 12A5 
     08C4 4243 
     08C6 3100 
     08C8 0159 
     08CA 6000 
     08CC D659 
     08CE AA41 
     08D0 B939 
     08D2 0001 
     08D4 0104 
     08D6 5108 
     08D8 A081 
     08DA 0201 
     08DC 0203 
     08DE 9C02 
     08E0 0405 
     08E2 069C 
     08E4 0207 
     08E6 0809 
     08E8 A09E 
     08EA 0450 
     08EC 5245 
     08EE 5353 
     08F0 FB31 
     08F2 0011 
     08F4 A028 
     08F6 0496 
     08F8 3100 
     08FA 0DA0 
     08FC 6804 
     08FE A7BF 
     0900 5200 
     0902 E4BE 
     0904 5830 
     0906 8E6C 
     0908 4293 
     090A 08FF 
     090C 020F 
     090E 494E 
     0910 5345 
     0912 5254 
     0914 2043 
     0916 4152 
     0918 5452 
     091A 4944 
     091C 4745 
     091E FB42 
     0920 EF90 
     0922 58BC 
     0924 B052 
     0926 5895 
     0928 5231 
     092A 0003 
     092C B052 
     092E 094D 
     0930 A352 
     0932 0004 
     0934 BD6A 
     0936 9072 
     0938 9672 
     093A BD5C 
     093C 9072 
     093E 9672 
     0940 A36A 
     0942 0004 
     0944 865E 
     0946 8E5C 
     0948 62D0 
     094A 3500 
     094C 015F 
     094E CF7D 
     0950 006A 
     0952 916A 
     0954 345E 
     0956 B052 
     0958 CF7D 
     095A 006A 
     095C 42E0 
     095E 3300 
     0960 015F 
     0962 0000 
     0964 6A91 
     0966 6A32 
     0968 5EB0 
     096A 5200 
     096C 006A 
     096E A352 
     0970 003A 
     0972 D272 
     0974 0062 
     0976 93BE 
     0978 4313 
     097A 0603 
     097C 7C39 
     097E 0001 
     0980 0104 
     0982 5086 
     0984 7402 
     0986 FF03 
     0988 42F7 
     098A A675 
     098C 31C8 
     098E 756C 
     0990 430A 
     0992 0603 
     0994 D605 
     0996 02F7 
     0998 0603 
     099A CEA4 
     099C 6C75 
     099E 926C 
     09A0 E26C 
     09A2 02BC 
     09A4 7890 
     09A6 6C94 
     09A8 6CBD 
     09AA 5C90 
     09AC 6C95 
     09AE 5CBF 
     09B0 729E 
     09B2 808E 
     09B4 7863 
     09B6 32BD 
     09B8 8080 
     09BA CF7D 
     09BC 005C 
     09BE 433A 
     09C0 3300 
     09C2 0280 
     09C4 8000 
     09C6 005C 
     09C8 0720 
     09CA 8F80 
     09CC CE43 
     09CE 3CCF 
     09D0 7010 
     09D2 0043 
     09D4 56BD 
     09D6 0070 
     09D8 A700 
     09DA 0FFF 
     09DC 3400 
     09DE AF10 
     09E0 00AF 
     09E2 0FFF 
     09E4 8600 
     09E6 3500 
     09E8 6F01 
     09EA 0035 
     09EC 003C 
     09EE 8084 
     09F0 0086 
     09F2 7435 
     09F4 001F 
     09F6 A381 
     09F8 A380 
     09FA 8780 
     09FC 828E 
     09FE 7863 
     0A00 7B96 
     0A02 73BD 
     0A04 0080 
     0A06 800F 
     0A08 F000 
     0A0A BE42 
     0A0C 6031 
     0A0E 0002 
     0A10 2860 
     0A12 00D6 
     0A14 28AA 
     0A16 4395 
     0A18 D229 
     0A1A 0063 
     0A1C 9594 
     0A1E 73BD 
     0A20 9073 
     0A22 4200 
     0A24 3102 
     0A26 00B0 
     0A28 4A04 
     0A2A B400 
     0A2C BF80 
     0A2E D006 
     0A30 B4BE 
     0A32 80D2 
     0A34 4086 
     0A36 B04A 
     0A38 3300 
     0A3A 07E0 
     0A3C 014A 
     0A3E 0000 
     0A40 D0A3 
     0A42 4A00 
     0A44 08A3 
     0A46 80D0 
     0A48 0007 
     0A4A 9280 
     0A4C D243 
     0A4E A700 
     0A50 BF80 
     0A52 D008 
     0A54 74BE 
     0A56 80D2 
     0A58 1F05 
     0A5A 03A7 
     0A5C BF58 
     0A5E 0479 
     0A60 F658 
     0A62 0000 
     0A64 BF58 
     0A66 0484 
     0A68 43D2 
     0A6A 886D 
     0A6C 8654 
     0A6E BC55 
     0A70 B056 
     0A72 8658 
     0A74 BD52 
     0A76 5691 
     0A78 52D4 
     0A7A 5855 
     0A7C 63FA 
     0A7E D6B0 
     0A80 522E 
     0A82 63FA 
     0A84 9058 
     0A86 43E9 
     0A88 8E58 
     0A8A 6438 
     0A8C BC55 
     0A8E 58D2 
     0A90 5508 
     0A92 6438 
     0A94 8654 
     0A96 8780 
     0A98 D091 
     0A9A 5634 
     0A9C 544A 
     0A9E B056 
     0AA0 A156 
     0AA2 540F 
     0AA4 1994 
     0AA6 73BD 
     0AA8 9073 
     0AAA 80FA 
     0AAC 0F1A 
     0AAE 442C 
     0AB0 9473 
     0AB2 BD90 
     0AB4 7390 
     0AB6 7296 
     0AB8 7200 
     0ABA 8F80 
     0ABC D044 
     0ABE 1EBD 
     0AC0 80FA 
     0AC2 9073 
     0AC4 9673 
     0AC6 D400 
     0AC8 0001 
     0ACA 9673 
     0ACC BD80 
     0ACE FA90 
     0AD0 7396 
     0AD2 7300 
     0AD4 0528 
     0AD6 4C05 
     0AD8 284E 
     0ADA 0520 
     0ADC 1080 
     0ADE 6000 
     0AE0 20F0 
     0AE2 0EF9 
     0AE4 86F8 
     0AE6 F717 
     0AE8 1717 
     0AEA 1717 
     0AEC 1717 
     0AEE 1717 
     0AF0 1717 
     0AF2 1706 
     0AF4 0301 
     0AF6 0B0C 
     0AF8 0D0F 
     0AFA 0402 
     0AFC 0D08 
     0AFE 0E05 
     0B00 090A 
     0B02 0627 
     0B04 2722 
     0B06 2206 
     0B08 BFDF 
     0B0A FF80 
     0B0C 0592 
     0B0E 0A01 
     0B10 9F00 
     0B12 06BF 
     0B14 DFFF 
     0B16 8020 
     0B18 900A 
     0B1A 019F 
     0B1C 000A 
     0B1E 3139 
     0B20 3831 
     0B22 2020 
     0B24 5445 
     0B26 5841 
     0B28 5320 
     0B2A 494E 
     0B2C 5354 
     0B2E 5255 
     0B30 4D45 
     0B32 4E54 
     0B34 5348 
     0B36 4F4D 
     0B38 4520 
     0B3A 434F 
     0B3C 4D50 
     0B3E 5554 
     0B40 4552 
     0B42 0000 
     0B44 0000 
     0B46 0000 
     0B48 0000 
     0B4A 2020 
     0B4C 2020 
     0B4E 2020 
     0B50 0020 
     0B52 4848 
     0B54 4800 
     0B56 0000 
     0B58 0000 
     0B5A 0048 
     0B5C FC48 
     0B5E 48FC 
     0B60 4800 
     0B62 103C 
     0B64 5038 
     0B66 1478 
     0B68 1000 
     0B6A C0C4 
     0B6C 0810 
     0B6E 2040 
     0B70 8C0C 
     0B72 6090 
     0B74 9060 
     0B76 6094 
     0B78 8874 
     0B7A 0810 
     0B7C 2000 
     0B7E 0000 
     0B80 0000 
     0B82 0810 
     0B84 2020 
     0B86 2020 
     0B88 1008 
     0B8A 4020 
     0B8C 1010 
     0B8E 1010 
     0B90 2040 
     0B92 0000 
     0B94 4830 
     0B96 CC30 
     0B98 4800 
     0B9A 0000 
     0B9C 1010 
     0B9E 7C10 
     0BA0 1000 
     0BA2 0000 
     0BA4 0000 
     0BA6 0030 
     0BA8 1020 
     0BAA 0000 
     0BAC 0000 
     0BAE 7C00 
     0BB0 0000 
     0BB2 0000 
     0BB4 0000 
     0BB6 0000 
     0BB8 3030 
     0BBA 0004 
     0BBC 0810 
     0BBE 2040 
     0BC0 8000 
     0BC2 3844 
     0BC4 4444 
     0BC6 4444 
     0BC8 4438 
     0BCA 1030 
     0BCC 5010 
     0BCE 1010 
     0BD0 107C 
     0BD2 7884 
     0BD4 0408 
     0BD6 1020 
     0BD8 40FC 
     0BDA 7884 
     0BDC 0438 
     0BDE 0404 
     0BE0 8478 
     0BE2 0C14 
     0BE4 2444 
     0BE6 84FC 
     0BE8 0404 
     0BEA F880 
     0BEC 80F8 
     0BEE 0404 
     0BF0 8478 
     0BF2 7880 
     0BF4 80F8 
     0BF6 8484 
     0BF8 8478 
     0BFA FC04 
     0BFC 0408 
     0BFE 1020 
     0C00 4040 
     0C02 7884 
     0C04 8478 
     0C06 8484 
     0C08 8478 
     0C0A 7884 
     0C0C 8484 
     0C0E 7C04 
     0C10 0478 
     0C12 0030 
     0C14 3000 
     0C16 0030 
     0C18 3000 
     0C1A 0030 
     0C1C 3000 
     0C1E 0030 
     0C20 1020 
     0C22 0008 
     0C24 1020 
     0C26 4020 
     0C28 1008 
     0C2A 0000 
     0C2C 007C 
     0C2E 007C 
     0C30 0000 
     0C32 0040 
     0C34 2010 
     0C36 0810 
     0C38 2040 
     0C3A 3844 
     0C3C 0408 
     0C3E 1010 
     0C40 0010 
     0C42 0078 
     0C44 849C 
     0C46 A498 
     0C48 807C 
     0C4A 7884 
     0C4C 8484 
     0C4E FC84 
     0C50 8484 
     0C52 F844 
     0C54 4478 
     0C56 4444 
     0C58 44F8 
     0C5A 7884 
     0C5C 8080 
     0C5E 8080 
     0C60 8478 
     0C62 F844 
     0C64 4444 
     0C66 4444 
     0C68 44F8 
     0C6A FC80 
     0C6C 80F0 
     0C6E 8080 
     0C70 80FC 
     0C72 FC80 
     0C74 80F0 
     0C76 8080 
     0C78 8080 
     0C7A 7884 
     0C7C 8080 
     0C7E 9C84 
     0C80 8478 
     0C82 8484 
     0C84 84FC 
     0C86 8484 
     0C88 8484 
     0C8A 7C10 
     0C8C 1010 
     0C8E 1010 
     0C90 107C 
     0C92 0404 
     0C94 0404 
     0C96 0484 
     0C98 8478 
     0C9A 8890 
     0C9C A0C0 
     0C9E A090 
     0CA0 8884 
     0CA2 4040 
     0CA4 4040 
     0CA6 4040 
     0CA8 407C 
     0CAA 84CC 
     0CAC B484 
     0CAE 8484 
     0CB0 8484 
     0CB2 84C4 
     0CB4 A494 
     0CB6 8C84 
     0CB8 8484 
     0CBA FC84 
     0CBC 8484 
     0CBE 8484 
     0CC0 84FC 
     0CC2 F884 
     0CC4 8484 
     0CC6 F880 
     0CC8 8080 
     0CCA 7884 
     0CCC 8484 
     0CCE 8494 
     0CD0 8874 
     0CD2 F884 
     0CD4 8484 
     0CD6 F890 
     0CD8 8884 
     0CDA 7884 
     0CDC 8078 
     0CDE 0404 
     0CE0 8478 
     0CE2 7C10 
     0CE4 1010 
     0CE6 1010 
     0CE8 1010 
     0CEA 8484 
     0CEC 8484 
     0CEE 8484 
     0CF0 8478 
     0CF2 4444 
     0CF4 4444 
     0CF6 2828 
     0CF8 1010 
     0CFA 8484 
     0CFC 8484 
     0CFE 84B4 
     0D00 CC84 
     0D02 8484 
     0D04 4830 
     0D06 3048 
     0D08 8484 
     0D0A 4444 
     0D0C 4428 
     0D0E 1010 
     0D10 1010 
     0D12 FC04 
     0D14 0810 
     0D16 2040 
     0D18 80FC 
     0D1A 3820 
     0D1C 2020 
     0D1E 2020 
     0D20 2038 
     0D22 0080 
     0D24 4020 
     0D26 1008 
     0D28 0400 
     0D2A 7010 
     0D2C 1010 
     0D2E 1010 
     0D30 1070 
     0D32 1028 
     0D34 4482 
     0D36 0000 
     0D38 0000 
     0D3A 0000 
     0D3C 0000 
     0D3E 0000 
     0D40 00FC 
     0D42 0000 
     0D44 0000 
     0D46 0000 
     0D48 0010 
     0D4A 1010 
     0D4C 1010 
     0D4E 0010 
     0D50 2828 
     0D52 2800 
     0D54 0000 
     0D56 0028 
     0D58 287C 
     0D5A 287C 
     0D5C 2828 
     0D5E 3854 
     0D60 5038 
     0D62 1454 
     0D64 3860 
     0D66 6408 
     0D68 1020 
     0D6A 4C0C 
     0D6C 2050 
     0D6E 5020 
     0D70 5448 
     0D72 3408 
     0D74 0810 
     0D76 0000 
     0D78 0000 
     0D7A 0810 
     0D7C 2020 
     0D7E 2010 
     0D80 0820 
     0D82 1008 
     0D84 0808 
     0D86 1020 
     0D88 0028 
     0D8A 107C 
     0D8C 1028 
     0D8E 0000 
     0D90 1010 
     0D92 7C10 
     0D94 1000 
     0D96 0000 
     0D98 0000 
     0D9A 3010 
     0D9C 2000 
     0D9E 0000 
     0DA0 7C00 
     0DA2 0000 
     0DA4 0000 
     0DA6 0000 
     0DA8 0030 
     0DAA 3000 
     0DAC 0408 
     0DAE 1020 
     0DB0 4000 
     0DB2 3844 
     0DB4 4444 
     0DB6 4444 
     0DB8 3810 
     0DBA 3010 
     0DBC 1010 
     0DBE 1038 
     0DC0 3844 
     0DC2 0408 
     0DC4 1020 
     0DC6 7C38 
     0DC8 4404 
     0DCA 1804 
     0DCC 4438 
     0DCE 0818 
     0DD0 2848 
     0DD2 7C08 
     0DD4 087C 
     0DD6 4078 
     0DD8 0404 
     0DDA 4438 
     0DDC 1820 
     0DDE 4078 
     0DE0 4444 
     0DE2 387C 
     0DE4 0408 
     0DE6 1020 
     0DE8 2020 
     0DEA 3844 
     0DEC 4438 
     0DEE 4444 
     0DF0 3838 
     0DF2 4444 
     0DF4 3C04 
     0DF6 0830 
     0DF8 0030 
     0DFA 3000 
     0DFC 3030 
     0DFE 0000 
     0E00 3030 
     0E02 0030 
     0E04 1020 
     0E06 0810 
     0E08 2040 
     0E0A 2010 
     0E0C 0800 
     0E0E 007C 
     0E10 007C 
     0E12 0000 
     0E14 2010 
     0E16 0804 
     0E18 0810 
     0E1A 2038 
     0E1C 4404 
     0E1E 0810 
     0E20 0010 
     0E22 3844 
     0E24 5C54 
     0E26 5C40 
     0E28 3838 
     0E2A 4444 
     0E2C 7C44 
     0E2E 4444 
     0E30 7824 
     0E32 2438 
     0E34 2424 
     0E36 7838 
     0E38 4440 
     0E3A 4040 
     0E3C 4438 
     0E3E 7824 
     0E40 2424 
     0E42 2424 
     0E44 787C 
     0E46 4040 
     0E48 7840 
     0E4A 407C 
     0E4C 7C40 
     0E4E 4078 
     0E50 4040 
     0E52 403C 
     0E54 4040 
     0E56 5C44 
     0E58 4438 
     0E5A 4444 
     0E5C 447C 
     0E5E 4444 
     0E60 4438 
     0E62 1010 
     0E64 1010 
     0E66 1038 
     0E68 0404 
     0E6A 0404 
     0E6C 0444 
     0E6E 3844 
     0E70 4850 
     0E72 6050 
     0E74 4844 
     0E76 4040 
     0E78 4040 
     0E7A 4040 
     0E7C 7C44 
     0E7E 6C54 
     0E80 5444 
     0E82 4444 
     0E84 4464 
     0E86 6454 
     0E88 4C4C 
     0E8A 447C 
     0E8C 4444 
     0E8E 4444 
     0E90 447C 
     0E92 7844 
     0E94 4478 
     0E96 4040 
     0E98 4038 
     0E9A 4444 
     0E9C 4454 
     0E9E 4834 
     0EA0 7844 
     0EA2 4478 
     0EA4 5048 
     0EA6 4438 
     0EA8 4440 
     0EAA 3804 
     0EAC 4438 
     0EAE 7C10 
     0EB0 1010 
     0EB2 1010 
     0EB4 1044 
     0EB6 4444 
     0EB8 4444 
     0EBA 4438 
     0EBC 4444 
     0EBE 4428 
     0EC0 2810 
     0EC2 1044 
     0EC4 4444 
     0EC6 5454 
     0EC8 5428 
     0ECA 4444 
     0ECC 2810 
     0ECE 2844 
     0ED0 4444 
     0ED2 4428 
     0ED4 1010 
     0ED6 1010 
     0ED8 7C04 
     0EDA 0810 
     0EDC 2040 
     0EDE 7C38 
     0EE0 2020 
     0EE2 2020 
     0EE4 2038 
     0EE6 0040 
     0EE8 2010 
     0EEA 0804 
     0EEC 0038 
     0EEE 0808 
     0EF0 0808 
     0EF2 0838 
     0EF4 0010 
     0EF6 2844 
     0EF8 0000 
     0EFA 0000 
     0EFC 0000 
     0EFE 0000 
     0F00 007C 
     0F02 0020 
     0F04 1008 
     0F06 0000 
     0F08 0000 
     0F0A 0038 
     0F0C 447C 
     0F0E 4444 
     0F10 0000 
     0F12 7824 
     0F14 3824 
     0F16 7800 
     0F18 003C 
     0F1A 4040 
     0F1C 403C 
     0F1E 0000 
     0F20 7824 
     0F22 2424 
     0F24 7800 
0794                   EVEN
0795 0F26 6060     VDPDUMP BCOPY "vdp-raw.bin"
     0F28 6868 
     0F2A 7070 
     0F2C 7878 
     0F2E 8080 
     0F30 8888 
     0F32 9090 
     0F34 9898 
     0F36 A0A0 
     0F38 A8A8 
     0F3A B0B0 
     0F3C B8B8 
     0F3E C0C0 
     0F40 C8C8 
     0F42 D0D0 
     0F44 D8D8 
     0F46 6060 
     0F48 6868 
     0F4A 7070 
     0F4C 7878 
     0F4E 8080 
     0F50 8888 
     0F52 9090 
     0F54 9898 
     0F56 A0A0 
     0F58 A8A8 
     0F5A B0B0 
     0F5C B8B8 
     0F5E C0C0 
     0F60 C8C8 
     0F62 D0D0 
     0F64 D8D8 
     0F66 6060 
     0F68 6868 
     0F6A 7070 
     0F6C 7878 
     0F6E 8080 
     0F70 8888 
     0F72 9090 
     0F74 9898 
     0F76 A0A0 
     0F78 A8A8 
     0F7A B0B0 
     0F7C B8B8 
     0F7E C0C0 
     0F80 C8C8 
     0F82 D0D0 
     0F84 D8D8 
     0F86 2020 
     0F88 2020 
     0F8A 2020 
     0F8C 2020 
     0F8E 2020 
     0F90 2020 
     0F92 2020 
     0F94 2020 
     0F96 2020 
     0F98 2020 
     0F9A 2020 
     0F9C 2020 
     0F9E 2020 
     0FA0 2020 
     0FA2 2020 
     0FA4 2020 
     0FA6 2020 
     0FA8 2020 
     0FAA 2020 
     0FAC 2020 
     0FAE 2020 
     0FB0 2020 
     0FB2 2020 
     0FB4 2020 
     0FB6 2020 
     0FB8 2020 
     0FBA 2020 
     0FBC 2020 
     0FBE 2020 
     0FC0 2020 
     0FC2 2020 
     0FC4 2020 
     0FC6 2020 
     0FC8 2020 
     0FCA 2020 
     0FCC 2020 
     0FCE 2020 
     0FD0 2020 
     0FD2 2020 
     0FD4 2001 
     0FD6 0203 
     0FD8 2020 
     0FDA 2020 
     0FDC 2020 
     0FDE 2020 
     0FE0 2020 
     0FE2 2020 
     0FE4 2020 
     0FE6 2020 
     0FE8 2020 
     0FEA 2020 
     0FEC 2020 
     0FEE 2020 
     0FF0 2020 
     0FF2 2020 
     0FF4 2004 
     0FF6 0506 
     0FF8 2020 
     0FFA 2020 
     0FFC 2020 
     0FFE 2020 
     1000 2020 
     1002 2020 
     1004 2020 
     1006 2020 
     1008 2020 
     100A 2020 
     100C 2020 
     100E 2020 
     1010 2020 
     1012 2020 
     1014 2007 
     1016 0809 
     1018 2020 
     101A 2020 
     101C 2020 
     101E 2020 
     1020 2020 
     1022 2020 
     1024 2020 
     1026 2020 
     1028 2020 
     102A 2020 
     102C 2020 
     102E 2020 
     1030 2020 
     1032 2020 
     1034 2020 
     1036 2020 
     1038 2020 
     103A 2020 
     103C 2020 
     103E 2020 
     1040 2020 
     1042 2020 
     1044 2020 
     1046 2020 
     1048 2020 
     104A 2020 
     104C 2020 
     104E 5445 
     1050 5841 
     1052 5320 
     1054 494E 
     1056 5354 
     1058 5255 
     105A 4D45 
     105C 4E54 
     105E 5320 
     1060 2020 
     1062 2020 
     1064 2020 
     1066 2020 
     1068 2020 
     106A 2020 
     106C 2020 
     106E 2020 
     1070 2020 
     1072 2020 
     1074 2020 
     1076 2020 
     1078 2020 
     107A 2020 
     107C 2020 
     107E 2020 
     1080 2020 
     1082 2020 
     1084 2020 
     1086 2020 
     1088 2020 
     108A 2020 
     108C 2020 
     108E 2020 
     1090 484F 
     1092 4D45 
     1094 2043 
     1096 4F4D 
     1098 5055 
     109A 5445 
     109C 5220 
     109E 2020 
     10A0 2020 
     10A2 2020 
     10A4 2020 
     10A6 2020 
     10A8 2020 
     10AA 2020 
     10AC 2020 
     10AE 2020 
     10B0 2020 
     10B2 2020 
     10B4 2020 
     10B6 2020 
     10B8 2020 
     10BA 2020 
     10BC 2020 
     10BE 2020 
     10C0 2020 
     10C2 2020 
     10C4 2020 
     10C6 2020 
     10C8 2020 
     10CA 2020 
     10CC 2020 
     10CE 2020 
     10D0 2020 
     10D2 2020 
     10D4 2020 
     10D6 2020 
     10D8 2020 
     10DA 2020 
     10DC 2020 
     10DE 2020 
     10E0 2020 
     10E2 2020 
     10E4 2020 
     10E6 2020 
     10E8 2020 
     10EA 2020 
     10EC 2020 
     10EE 2020 
     10F0 2020 
     10F2 2020 
     10F4 2020 
     10F6 2020 
     10F8 2020 
     10FA 2020 
     10FC 2020 
     10FE 2020 
     1100 2020 
     1102 2020 
     1104 2020 
     1106 2020 
     1108 2020 
     110A 2020 
     110C 2020 
     110E 2020 
     1110 2020 
     1112 2020 
     1114 2020 
     1116 2020 
     1118 2020 
     111A 2020 
     111C 2020 
     111E 2020 
     1120 2020 
     1122 2020 
     1124 2020 
     1126 2020 
     1128 5245 
     112A 4144 
     112C 592D 
     112E 5052 
     1130 4553 
     1132 5320 
     1134 414E 
     1136 5920 
     1138 4B45 
     113A 5920 
     113C 544F 
     113E 2042 
     1140 4547 
     1142 494E 
     1144 2020 
     1146 2020 
     1148 2020 
     114A 2020 
     114C 2020 
     114E 2020 
     1150 2020 
     1152 2020 
     1154 2020 
     1156 2020 
     1158 2020 
     115A 2020 
     115C 2020 
     115E 2020 
     1160 2020 
     1162 2020 
     1164 2020 
     1166 6060 
     1168 6868 
     116A 7070 
     116C 7878 
     116E 8080 
     1170 8888 
     1172 9090 
     1174 9898 
     1176 A0A0 
     1178 A8A8 
     117A B0B0 
     117C B8B8 
     117E C0C0 
     1180 C8C8 
     1182 D0D0 
     1184 D8D8 
     1186 6060 
     1188 6868 
     118A 7070 
     118C 7878 
     118E 8080 
     1190 8888 
     1192 9090 
     1194 9898 
     1196 A0A0 
     1198 A8A8 
     119A B0B0 
     119C B8B8 
     119E C0C0 
     11A0 C8C8 
     11A2 D0D0 
     11A4 D8D8 
     11A6 6060 
     11A8 6868 
     11AA 7070 
     11AC 7878 
     11AE 8080 
     11B0 8888 
     11B2 9090 
     11B4 9898 
     11B6 A0A0 
     11B8 A8A8 
     11BA B0B0 
     11BC B8B8 
     11BE C0C0 
     11C0 C8C8 
     11C2 D0D0 
     11C4 D8D8 
     11C6 2020 
     11C8 2020 
     11CA 2020 
     11CC 2020 
     11CE 2020 
     11D0 2020 
     11D2 2020 
     11D4 2020 
     11D6 2020 
     11D8 2020 
     11DA 2020 
     11DC 2020 
     11DE 2020 
     11E0 2020 
     11E2 2020 
     11E4 2020 
     11E6 2020 
     11E8 2020 
     11EA 0A31 
     11EC 3938 
     11EE 3120 
     11F0 2054 
     11F2 4558 
     11F4 4153 
     11F6 2049 
     11F8 4E53 
     11FA 5452 
     11FC 554D 
     11FE 454E 
     1200 5453 
     1202 2020 
     1204 2020 
     1206 2020 
     1208 2020 
     120A 2020 
     120C 2020 
     120E 2020 
     1210 2020 
     1212 2020 
     1214 2020 
     1216 2020 
     1218 2020 
     121A 2020 
     121C 2020 
     121E 2020 
     1220 2020 
     1222 2020 
     1224 2020 
     1226 0000 
     1228 0000 
     122A 0000 
     122C 0000 
     122E 0000 
     1230 0000 
     1232 0000 
     1234 0000 
     1236 0000 
     1238 0000 
     123A 0000 
     123C 0000 
     123E 0000 
     1240 0000 
     1242 0000 
     1244 0000 
     1246 0000 
     1248 0000 
     124A 0000 
     124C 0000 
     124E 0000 
     1250 0000 
     1252 0000 
     1254 0000 
     1256 0000 
     1258 0000 
     125A 0000 
     125C 0000 
     125E 0000 
     1260 0000 
     1262 0000 
     1264 0000 
     1266 0000 
     1268 0000 
     126A 0000 
     126C 0000 
     126E 0000 
     1270 0000 
     1272 0000 
     1274 0000 
     1276 0000 
     1278 0000 
     127A 0000 
     127C 0000 
     127E 0000 
     1280 0000 
     1282 0000 
     1284 0000 
     1286 0000 
     1288 0000 
     128A 0000 
     128C 0000 
     128E 0000 
     1290 0000 
     1292 0000 
     1294 0000 
     1296 0000 
     1298 0000 
     129A 0000 
     129C 0000 
     129E 0000 
     12A0 0000 
     12A2 0000 
     12A4 0000 
     12A6 1717 
     12A8 1717 
     12AA 1717 
     12AC 1717 
     12AE 1717 
     12B0 1717 
     12B2 0603 
     12B4 010B 
     12B6 0C0D 
     12B8 0F04 
     12BA 020D 
     12BC 080E 
     12BE 0509 
     12C0 0A06 
     12C2 2727 
     12C4 2222 
     12C6 0000 
     12C8 0000 
     12CA 0000 
     12CC 0000 
     12CE 0000 
     12D0 0000 
     12D2 0000 
     12D4 0000 
     12D6 0000 
     12D8 0000 
     12DA 0000 
     12DC 0000 
     12DE 0000 
     12E0 0000 
     12E2 0000 
     12E4 0000 
     12E6 0000 
     12E8 0000 
     12EA 0000 
     12EC 0000 
     12EE 0000 
     12F0 0000 
     12F2 0000 
     12F4 0000 
     12F6 0000 
     12F8 0000 
     12FA 0000 
     12FC 0000 
     12FE 0000 
     1300 0000 
     1302 0000 
     1304 0000 
     1306 0000 
     1308 0000 
     130A 0000 
     130C 0000 
     130E 0000 
     1310 0000 
     1312 0000 
     1314 0000 
     1316 0000 
     1318 0000 
     131A 0000 
     131C 0000 
     131E 0000 
     1320 0000 
     1322 0000 
     1324 0000 
     1326 0000 
     1328 0000 
     132A 0000 
     132C 0000 
     132E 0000 
     1330 0000 
     1332 0000 
     1334 0000 
     1336 0000 
     1338 0000 
     133A 0000 
     133C 0000 
     133E 0000 
     1340 0000 
     1342 0000 
     1344 0000 
     1346 0000 
     1348 0000 
     134A 0000 
     134C 0000 
     134E 0000 
     1350 0000 
     1352 0000 
     1354 0000 
     1356 0000 
     1358 0000 
     135A 0000 
     135C 0000 
     135E 0000 
     1360 0000 
     1362 0000 
     1364 0000 
     1366 0000 
     1368 0000 
     136A 0000 
     136C 0000 
     136E 0000 
     1370 0000 
     1372 0000 
     1374 0000 
     1376 0000 
     1378 0000 
     137A 0000 
     137C 0000 
     137E 0000 
     1380 0000 
     1382 0000 
     1384 0000 
     1386 0000 
     1388 0000 
     138A 0000 
     138C 0000 
     138E 0000 
     1390 0000 
     1392 0000 
     1394 0000 
     1396 0000 
     1398 0000 
     139A 0000 
     139C 0000 
     139E 0000 
     13A0 0000 
     13A2 0000 
     13A4 0000 
     13A6 0000 
     13A8 0000 
     13AA 0000 
     13AC 0000 
     13AE 0000 
     13B0 0000 
     13B2 0000 
     13B4 0000 
     13B6 0000 
     13B8 0000 
     13BA 0000 
     13BC 0000 
     13BE 0000 
     13C0 0000 
     13C2 0000 
     13C4 0000 
     13C6 0000 
     13C8 0000 
     13CA 0000 
     13CC 0000 
     13CE 0000 
     13D0 0000 
     13D2 0000 
     13D4 0000 
     13D6 0000 
     13D8 0000 
     13DA 0000 
     13DC 0000 
     13DE 0000 
     13E0 0000 
     13E2 0000 
     13E4 0000 
     13E6 0000 
     13E8 0000 
     13EA 0000 
     13EC 0000 
     13EE 0000 
     13F0 0000 
     13F2 0000 
     13F4 0000 
     13F6 0000 
     13F8 0000 
     13FA 0000 
     13FC 0000 
     13FE 0000 
     1400 0000 
     1402 0000 
     1404 0000 
     1406 0000 
     1408 0000 
     140A 0000 
     140C 0000 
     140E 0000 
     1410 0000 
     1412 0000 
     1414 0000 
     1416 0000 
     1418 0000 
     141A 0000 
     141C 0000 
     141E 0000 
     1420 0000 
     1422 0000 
     1424 0000 
     1426 0000 
     1428 0000 
     142A 0000 
     142C 0000 
     142E 0000 
     1430 0000 
     1432 0000 
     1434 0000 
     1436 0000 
     1438 0000 
     143A 0000 
     143C 0000 
     143E 0000 
     1440 0000 
     1442 0000 
     1444 0000 
     1446 0000 
     1448 0000 
     144A 0000 
     144C 0000 
     144E 0000 
     1450 0000 
     1452 0000 
     1454 0000 
     1456 0000 
     1458 0000 
     145A 0000 
     145C 0000 
     145E 0000 
     1460 0000 
     1462 0000 
     1464 0000 
     1466 0000 
     1468 0000 
     146A 0000 
     146C 0000 
     146E 0000 
     1470 0000 
     1472 0000 
     1474 0000 
     1476 0000 
     1478 0000 
     147A 0000 
     147C 0000 
     147E 0000 
     1480 0000 
     1482 0000 
     1484 0000 
     1486 0000 
     1488 0000 
     148A 0000 
     148C 0000 
     148E 0000 
     1490 0000 
     1492 0000 
     1494 0000 
     1496 0000 
     1498 0000 
     149A 0000 
     149C 0000 
     149E 0000 
     14A0 0000 
     14A2 0000 
     14A4 0000 
     14A6 0000 
     14A8 0000 
     14AA 0000 
     14AC 0000 
     14AE 0000 
     14B0 0000 
     14B2 0000 
     14B4 0000 
     14B6 0000 
     14B8 0000 
     14BA 0000 
     14BC 0000 
     14BE 0000 
     14C0 0000 
     14C2 0000 
     14C4 0000 
     14C6 0000 
     14C8 0000 
     14CA 0000 
     14CC 0000 
     14CE 0000 
     14D0 0000 
     14D2 0000 
     14D4 0000 
     14D6 0000 
     14D8 0000 
     14DA 0000 
     14DC 0000 
     14DE 0000 
     14E0 0000 
     14E2 0000 
     14E4 0000 
     14E6 0000 
     14E8 0000 
     14EA 0000 
     14EC 0000 
     14EE 0000 
     14F0 0000 
     14F2 0000 
     14F4 0000 
     14F6 0000 
     14F8 0000 
     14FA 0000 
     14FC 0000 
     14FE 0000 
     1500 0000 
     1502 0000 
     1504 0000 
     1506 0000 
     1508 0000 
     150A 0000 
     150C 0000 
     150E 0000 
     1510 0000 
     1512 0000 
     1514 0000 
     1516 0000 
     1518 0000 
     151A 0000 
     151C 0000 
     151E 0000 
     1520 0000 
     1522 0000 
     1524 0000 
     1526 0000 
     1528 0000 
     152A 0000 
     152C 0000 
     152E 0000 
     1530 0000 
     1532 0000 
     1534 0000 
     1536 0000 
     1538 0000 
     153A 0000 
     153C 0000 
     153E 0000 
     1540 0000 
     1542 0000 
     1544 0000 
     1546 0000 
     1548 0000 
     154A 0000 
     154C 0000 
     154E 0000 
     1550 0000 
     1552 0000 
     1554 0000 
     1556 0000 
     1558 0000 
     155A 0000 
     155C 0000 
     155E 0000 
     1560 0000 
     1562 0000 
     1564 0000 
     1566 0000 
     1568 0000 
     156A 0000 
     156C 0000 
     156E 0000 
     1570 0000 
     1572 0000 
     1574 0000 
     1576 0000 
     1578 0000 
     157A 0000 
     157C 0000 
     157E 0000 
     1580 0000 
     1582 0000 
     1584 0000 
     1586 0000 
     1588 0000 
     158A 0000 
     158C 0000 
     158E 0000 
     1590 0000 
     1592 0000 
     1594 0000 
     1596 0000 
     1598 0000 
     159A 0000 
     159C 0000 
     159E 0000 
     15A0 0000 
     15A2 0000 
     15A4 0000 
     15A6 0000 
     15A8 0000 
     15AA 0000 
     15AC 0000 
     15AE 0000 
     15B0 0000 
     15B2 0000 
     15B4 0000 
     15B6 0000 
     15B8 0000 
     15BA 0000 
     15BC 0000 
     15BE 0000 
     15C0 0000 
     15C2 0000 
     15C4 0000 
     15C6 0000 
     15C8 0000 
     15CA 0000 
     15CC 0000 
     15CE 0000 
     15D0 0000 
     15D2 0000 
     15D4 0000 
     15D6 0000 
     15D8 0000 
     15DA 0000 
     15DC 0000 
     15DE 0000 
     15E0 0000 
     15E2 0000 
     15E4 0000 
     15E6 0000 
     15E8 0000 
     15EA 0000 
     15EC 0000 
     15EE 0000 
     15F0 0000 
     15F2 0000 
     15F4 0000 
     15F6 0000 
     15F8 0000 
     15FA 0000 
     15FC 0000 
     15FE 0000 
     1600 0000 
     1602 0000 
     1604 0000 
     1606 0000 
     1608 0000 
     160A 0000 
     160C 0000 
     160E 0000 
     1610 0000 
     1612 0000 
     1614 0000 
     1616 0000 
     1618 0000 
     161A 0000 
     161C 0000 
     161E 0000 
     1620 0000 
     1622 0000 
     1624 0000 
     1626 0000 
     1628 0000 
     162A 0000 
     162C 0000 
     162E 0000 
     1630 0000 
     1632 0000 
     1634 0000 
     1636 0000 
     1638 0000 
     163A 0000 
     163C 0000 
     163E 0000 
     1640 0000 
     1642 0000 
     1644 0000 
     1646 0000 
     1648 0000 
     164A 0000 
     164C 0000 
     164E 0000 
     1650 0000 
     1652 0000 
     1654 0000 
     1656 0000 
     1658 0000 
     165A 0000 
     165C 0000 
     165E 0000 
     1660 0000 
     1662 0000 
     1664 0000 
     1666 0000 
     1668 0000 
     166A 0000 
     166C 0000 
     166E 0000 
     1670 0000 
     1672 0000 
     1674 0000 
     1676 0000 
     1678 0000 
     167A 0000 
     167C 0000 
     167E 0000 
     1680 0000 
     1682 0000 
     1684 0000 
     1686 0000 
     1688 0000 
     168A 0000 
     168C 0000 
     168E 0000 
     1690 0000 
     1692 0000 
     1694 0000 
     1696 0000 
     1698 0000 
     169A 0000 
     169C 0000 
     169E 0000 
     16A0 0000 
     16A2 0000 
     16A4 0000 
     16A6 0000 
     16A8 0000 
     16AA 0000 
     16AC 0000 
     16AE 0000 
     16B0 0000 
     16B2 0000 
     16B4 0000 
     16B6 0000 
     16B8 0000 
     16BA 0000 
     16BC 0000 
     16BE 0000 
     16C0 0000 
     16C2 0000 
     16C4 0000 
     16C6 0000 
     16C8 0000 
     16CA 0000 
     16CC 0000 
     16CE 0000 
     16D0 0000 
     16D2 0000 
     16D4 0000 
     16D6 0000 
     16D8 0000 
     16DA 0000 
     16DC 0000 
     16DE 0000 
     16E0 0000 
     16E2 0000 
     16E4 0000 
     16E6 0000 
     16E8 0000 
     16EA 0000 
     16EC 0000 
     16EE 0000 
     16F0 0000 
     16F2 0000 
     16F4 0000 
     16F6 0000 
     16F8 0000 
     16FA 0000 
     16FC 0000 
     16FE 0000 
     1700 0000 
     1702 0000 
     1704 0000 
     1706 0000 
     1708 0000 
     170A 0000 
     170C 0000 
     170E 0000 
     1710 0000 
     1712 0000 
     1714 0000 
     1716 0000 
     1718 0000 
     171A 0000 
     171C 0000 
     171E 0000 
     1720 0000 
     1722 0000 
     1724 0000 
     1726 0000 
     1728 0000 
     172A 0000 
     172C 0000 
     172E 0103 
     1730 0303 
     1732 0303 
     1734 0303 
     1736 FC04 
     1738 0505 
     173A 0406 
     173C 020C 
     173E 0080 
     1740 4040 
     1742 8000 
     1744 0C12 
     1746 FF80 
     1748 C040 
     174A 6038 
     174C 1C0E 
     174E 1921 
     1750 213D 
     1752 0505 
     1754 05C4 
     1756 BA8A 
     1758 8ABA 
     175A A1A1 
     175C A122 
     175E 0301 
     1760 0000 
     1762 0000 
     1764 0000 
     1766 E231 
     1768 1018 
     176A 0C07 
     176C 0300 
     176E 4C90 
     1770 2040 
     1772 4020 
     1774 E000 
     1776 3C42 
     1778 99A1 
     177A A199 
     177C 423C 
     177E 0000 
     1780 0000 
     1782 0000 
     1784 0000 
     1786 0000 
     1788 0000 
     178A 0000 
     178C 0000 
     178E 0000 
     1790 0000 
     1792 0000 
     1794 0000 
     1796 0000 
     1798 0000 
     179A 0000 
     179C 0000 
     179E 0000 
     17A0 0000 
     17A2 0000 
     17A4 0000 
     17A6 0000 
     17A8 0000 
     17AA 0000 
     17AC 0000 
     17AE 0000 
     17B0 0000 
     17B2 0000 
     17B4 0000 
     17B6 0000 
     17B8 0000 
     17BA 0000 
     17BC 0000 
     17BE 0000 
     17C0 0000 
     17C2 0000 
     17C4 0000 
     17C6 0000 
     17C8 0000 
     17CA 0000 
     17CC 0000 
     17CE 0000 
     17D0 0000 
     17D2 0000 
     17D4 0000 
     17D6 0000 
     17D8 0000 
     17DA 0000 
     17DC 0000 
     17DE 0000 
     17E0 0000 
     17E2 0000 
     17E4 0000 
     17E6 0000 
     17E8 0000 
     17EA 0000 
     17EC 0000 
     17EE 0000 
     17F0 0000 
     17F2 0000 
     17F4 0000 
     17F6 0000 
     17F8 0000 
     17FA 0000 
     17FC 0000 
     17FE 0000 
     1800 0000 
     1802 0000 
     1804 0000 
     1806 0000 
     1808 0000 
     180A 0000 
     180C 0000 
     180E 0000 
     1810 0000 
     1812 0000 
     1814 0000 
     1816 0000 
     1818 0000 
     181A 0000 
     181C 0000 
     181E 0000 
     1820 0000 
     1822 0000 
     1824 0000 
     1826 0000 
     1828 0000 
     182A 0000 
     182C 0000 
     182E 2020 
     1830 2020 
     1832 2020 
     1834 0020 
     1836 4848 
     1838 4800 
     183A 0000 
     183C 0000 
     183E 0048 
     1840 FC48 
     1842 48FC 
     1844 4800 
     1846 103C 
     1848 5038 
     184A 1478 
     184C 1000 
     184E C0C4 
     1850 0810 
     1852 2040 
     1854 8C0C 
     1856 6090 
     1858 9060 
     185A 6094 
     185C 8874 
     185E 0810 
     1860 2000 
     1862 0000 
     1864 0000 
     1866 0810 
     1868 2020 
     186A 2020 
     186C 1008 
     186E 4020 
     1870 1010 
     1872 1010 
     1874 2040 
     1876 0000 
     1878 4830 
     187A CC30 
     187C 4800 
     187E 0000 
     1880 1010 
     1882 7C10 
     1884 1000 
     1886 0000 
     1888 0000 
     188A 0030 
     188C 1020 
     188E 0000 
     1890 0000 
     1892 7C00 
     1894 0000 
     1896 0000 
     1898 0000 
     189A 0000 
     189C 3030 
     189E 0004 
     18A0 0810 
     18A2 2040 
     18A4 8000 
     18A6 3844 
     18A8 4444 
     18AA 4444 
     18AC 4438 
     18AE 1030 
     18B0 5010 
     18B2 1010 
     18B4 107C 
     18B6 7884 
     18B8 0408 
     18BA 1020 
     18BC 40FC 
     18BE 7884 
     18C0 0438 
     18C2 0404 
     18C4 8478 
     18C6 0C14 
     18C8 2444 
     18CA 84FC 
     18CC 0404 
     18CE F880 
     18D0 80F8 
     18D2 0404 
     18D4 8478 
     18D6 7880 
     18D8 80F8 
     18DA 8484 
     18DC 8478 
     18DE FC04 
     18E0 0408 
     18E2 1020 
     18E4 4040 
     18E6 7884 
     18E8 8478 
     18EA 8484 
     18EC 8478 
     18EE 7884 
     18F0 8484 
     18F2 7C04 
     18F4 0478 
     18F6 0030 
     18F8 3000 
     18FA 0030 
     18FC 3000 
     18FE 0030 
     1900 3000 
     1902 0030 
     1904 1020 
     1906 0008 
     1908 1020 
     190A 4020 
     190C 1008 
     190E 0000 
     1910 007C 
     1912 007C 
     1914 0000 
     1916 0040 
     1918 2010 
     191A 0810 
     191C 2040 
     191E 3844 
     1920 0408 
     1922 1010 
     1924 0010 
     1926 0078 
     1928 849C 
     192A A498 
     192C 807C 
     192E 7884 
     1930 8484 
     1932 FC84 
     1934 8484 
     1936 F844 
     1938 4478 
     193A 4444 
     193C 44F8 
     193E 7884 
     1940 8080 
     1942 8080 
     1944 8478 
     1946 F844 
     1948 4444 
     194A 4444 
     194C 44F8 
     194E FC80 
     1950 80F0 
     1952 8080 
     1954 80FC 
     1956 FC80 
     1958 80F0 
     195A 8080 
     195C 8080 
     195E 7884 
     1960 8080 
     1962 9C84 
     1964 8478 
     1966 8484 
     1968 84FC 
     196A 8484 
     196C 8484 
     196E 7C10 
     1970 1010 
     1972 1010 
     1974 107C 
     1976 0404 
     1978 0404 
     197A 0484 
     197C 8478 
     197E 8890 
     1980 A0C0 
     1982 A090 
     1984 8884 
     1986 4040 
     1988 4040 
     198A 4040 
     198C 407C 
     198E 84CC 
     1990 B484 
     1992 8484 
     1994 8484 
     1996 84C4 
     1998 A494 
     199A 8C84 
     199C 8484 
     199E FC84 
     19A0 8484 
     19A2 8484 
     19A4 84FC 
     19A6 F884 
     19A8 8484 
     19AA F880 
     19AC 8080 
     19AE 7884 
     19B0 8484 
     19B2 8494 
     19B4 8874 
     19B6 F884 
     19B8 8484 
     19BA F890 
     19BC 8884 
     19BE 7884 
     19C0 8078 
     19C2 0404 
     19C4 8478 
     19C6 7C10 
     19C8 1010 
     19CA 1010 
     19CC 1010 
     19CE 8484 
     19D0 8484 
     19D2 8484 
     19D4 8478 
     19D6 4444 
     19D8 4444 
     19DA 2828 
     19DC 1010 
     19DE 8484 
     19E0 8484 
     19E2 84B4 
     19E4 CC84 
     19E6 8484 
     19E8 4830 
     19EA 3048 
     19EC 8484 
     19EE 4444 
     19F0 4428 
     19F2 1010 
     19F4 1010 
     19F6 FC04 
     19F8 0810 
     19FA 2040 
     19FC 80FC 
     19FE 3820 
     1A00 2020 
     1A02 2020 
     1A04 2038 
     1A06 0080 
     1A08 4020 
     1A0A 1008 
     1A0C 0400 
     1A0E 7010 
     1A10 1010 
     1A12 1010 
     1A14 1070 
     1A16 1028 
     1A18 4482 
     1A1A 0000 
     1A1C 0000 
     1A1E 0000 
     1A20 0000 
     1A22 0000 
     1A24 00FC 
     1A26 0000 
     1A28 0000 
     1A2A 0000 
     1A2C 0000 
     1A2E 0000 
     1A30 0000 
     1A32 0000 
     1A34 0000 
0796               DUMPEND
0797 1A36 ....     TMS99105  TEXT  'TMS99105 AND FPGA AT WORK! '
0798                     BYTE 0
0799                     EVEN
0800 1A52 ....     SPACES  TEXT '  '
0801 1A54 0047             BYTE 0
0802 1A55 ....     GTT		TEXT 'GROM CHECKSUM TEST:'
0803 1A68 0A0D     			BYTE 10,13,0
     1A6A 0043 
0804 1A6B ....     CRU0STR TEXT 'CRU FROM 0: '
0805                     BYTE 0
0806                     EVEN
0807               GROMTESTS
0808 1A78 ....           TEXT 'GROM READ TEST:1234>'
0809 1A8C 0000           BYTE  0
0810                     EVEN
0811               HELLO
0812 1A8E ....         TEXT '      TMS99105'
0813               ;	  TEXT '      SOFTCPU RUNNING'
0814 1A9C 0000     	  BYTE 0
0815               
0816               	  EVEN
0817 1A9E ....     FLAGS_STRING TEXT ' STATUS REGISTER'
0818 1AAE 0000     	  BYTE 0
0819               	  EVEN
0820               
0821 1AB0 ....     TEST_TMS99110 TEXT 'TESTING TMS99110 INSTRUCTION'
0822 1ACC 0000           BYTE 0
0823                     EVEN
0824 1ACE ....     GOTBACK TEXT 'RETURNED AFTER MACROSTORE TEST'
0825 1AEC 0000     			BYTE 0
0826               			EVEN
0827               
0828               
0829               TEST_DATA_SEQ			; Parameters to pass two various instructions
0830 1AEE 0001     	DATA	1,2			; First data set
     1AF0 0002 
0831 1AF2 7FFF     	DATA	>7FFF,1		; 2nd
     1AF4 0001 
0832 1AF6 8000     	DATA	>8000,>7FFF
     1AF8 7FFF 
0833 1AFA 7FFF     	DATA 	>7FFF,>8000
     1AFC 8000 
0834 1AFE FFFF     	DATA	>FFFF,>8000	; 5th
     1B00 8000 
0835 1B02 8000     	DATA	>8000,>FFFF
     1B04 FFFF 
0836 1B06 8000     	DATA	>8000,>8000	; 7th
     1B08 8000 
0837 1B0A 0000     	DATA	0,>8000		; 8th
     1B0C 8000 
0838               	; -- ok extending to 16 values
0839 1B0E 00C8     	DATA	200,400		; 9th
     1B10 0190 
0840 1B12 0190     	DATA	400,200
     1B14 00C8 
0841 1B16 0000     	DATA	0,400
     1B18 0190 
0842 1B1A 0190     	DATA	400,0		; 12th
     1B1C 0000 
0843 1B1E 03E8     	DATA	1000,10
     1B20 000A 
0844 1B22 000A     	DATA	10,1000
     1B24 03E8 
0845 1B26 9000     	DATA	>9000,100
     1B28 0064 
0846 1B2A 0064     	DATA	100,>9000	; 16th
     1B2C 9000 
0847               TEST_DEND
0848               
0849               TEST_ROUTINES
0850 1B2E 1B80r    	DATA	DO_ADD, DO_SUB    ; 0
     1B30 1B84r
0851 1B32 1B88r    	DATA	DO_SOC, DO_SZC
     1B34 1B8Cr
0852 1B36 1B90r    	DATA	DO_DIV, DO_MPY
     1B38 1B94r
0853 1B3A 1B98r    	DATA	DO_COMP, DO_NEG   ; 6
     1B3C 1B9Cr
0854 1B3E 1BA0r    	DATA	DO_SRL, DO_ANDI
     1B40 1BA4r
0855 1B42 1BAAr    	DATA 	DO_CB, DO_SB      ; 10
     1B44 1BAEr
0856 1B46 1BB2r    	DATA	DO_AB, DO_XOR
     1B48 1C00r
0857 1B4A 1BB6r    	DATA 	DO_INC, DO_DEC
     1B4C 1BBAr
0858 1B4E 1BBEr    	DATA	DO_SLA, DO_SRA    ; 16
     1B50 1BC2r
0859 1B52 1BC6r    	DATA	DO_SRC, DO_SRC2
     1B54 1BCAr
0860 1B56 1BD2r    	DATA  DO_MOV, DO_MOVB   ; 20
     1B58 1BD6r
0861 1B5A 1BDAr    	DATA	DO_SOCB, DO_SZCB
     1B5C 1BDEr
0862 1B5E 1BE2r    	DATA	DO_ABS, DO_X      ; 24
     1B60 1BE6r
0863 1B62 1BF8r          DATA  DO_COC, DO_CZC    ; 26
     1B64 1BFCr
0864 1B66 1C20r          DATA  DO_SWPB, DO_CI_ORI
     1B68 1C24r
0865 1B6A 1C08r          DATA  DO_CLR_SETO, DO_INCT_DECT ; 30-31
     1B6C 1C14r
0866 1B6E 1C34r          DATA  DO_STCR, DO_LDCR  ; 32-33
     1B70 1C3Cr
0867 1B72 1C44r          DATA  DO_STCR2, DO_LDCR2 ; 34
     1B74 1C4Cr
0868 1B76 1C54r          DATA  DO_STCR3, DO_LDCR3 ; 36
     1B78 1C5Cr
0869 1B7A 1C64r          DATA  DO_STCR4, DO_LDCR4 ; 38
     1B7C 1C6Cr
0870 1B7E 1C04r          DATA  DO_INV
0871               
0872               TEST_ROUT_END
0873               
0874 1B80 A081  18 DO_ADD	A	R1,R2
0875 1B82 045B  20 	RT
0876 1B84 6081  18 DO_SUB	S	R1,R2
0877 1B86 045B  20 	RT
0878 1B88 E081  18 DO_SOC	SOC R1,R2
0879 1B8A 045B  20 	RT
0880 1B8C 4081  18 DO_SZC	SZC R1,R2
0881 1B8E 045B  20 	RT
0882 1B90 3C81  128 DO_DIV	DIV	R1,R2
0883 1B92 045B  20 	RT
0884 1B94 3881  56 DO_MPY	MPY	R1,R2
0885 1B96 045B  20 	RT
0886 1B98 8081  18 DO_COMP	C	R1,R2
0887 1B9A 045B  20 	RT
0888 1B9C 0502  16 DO_NEG	NEG R2
0889 1B9E 045B  20 	RT
0890 1BA0 0912  56 DO_SRL	SRL R2,1
0891 1BA2 045B  20 	RT
0892 1BA4 0242  22 DO_ANDI	ANDI R2,>8001
     1BA6 8001 
0893 1BA8 045B  20 	RT
0894 1BAA 9081  18 DO_CB	CB	R1,R2
0895 1BAC 045B  20 	RT
0896 1BAE 7081  18 DO_SB	SB	R1,R2
0897 1BB0 045B  20 	RT
0898 1BB2 B081  18 DO_AB	AB	R1,R2
0899 1BB4 045B  20 	RT
0900 1BB6 0582  14 DO_INC	INC R2
0901 1BB8 045B  20 	RT
0902 1BBA 0602  14 DO_DEC	DEC R2
0903 1BBC 045B  20 	RT
0904 1BBE 0A12  56 DO_SLA	SLA R2,1
0905 1BC0 045B  20 	RT
0906 1BC2 0812  56 DO_SRA	SRA R2,1
0907 1BC4 045B  20 	RT
0908 1BC6 0B12  56 DO_SRC	SRC R2,1
0909 1BC8 045B  20 	RT
0910               DO_SRC2	; Test a 3-bit shift with R0
0911 1BCA 0200  20 	LI	R0,3
     1BCC 0003 
0912 1BCE 0B02  56 	SRC	R2,0
0913 1BD0 045B  20 	RT
0914 1BD2 C081  18 DO_MOV	MOV R1,R2
0915 1BD4 045B  20 	RT
0916 1BD6 D081  18 DO_MOVB	MOVB R1,R2
0917 1BD8 045B  20 	RT
0918 1BDA F081  18 DO_SOCB SOCB R1,R2
0919 1BDC 045B  20 	RT
0920 1BDE 5081  18 DO_SZCB SZCB R1,R2
0921 1BE0 045B  20 	RT
0922 1BE2 0742  18 DO_ABS 	ABS R2
0923 1BE4 045B  20 	RT
0924               DO_X
0925 1BE6 0203  20 	LI	R3,>0502	; NEG R2
     1BE8 0502 
0926 1BEA 0281  22 	CI	R1,0		; R1 > 0 ?
     1BEC 0000 
0927 1BEE 1502  14 	JGT !
0928 1BF0 0203  20 	LI  R3,>05C2	; INCT R2
     1BF2 05C2 
0929 1BF4 0483  12 !	X	R3
0930 1BF6 045B  20 	RT
0931 1BF8 2081  18 DO_COC      COC R1,R2
0932 1BFA 045B  20       RT
0933 1BFC 2481  18 DO_CZC      CZC R1,R2
0934 1BFE 045B  20       RT
0935 1C00 2881  18 DO_XOR      XOR R1,R2
0936 1C02 045B  20       RT
0937 1C04 0542  14 DO_INV      INV R2
0938 1C06 045B  20       RT
0939               DO_CLR_SETO       ; Handle SETO and CLR in one go
0940 1C08 04C1  14       CLR R1
0941 1C0A 02C3  12       STST  R3
0942 1C0C 0243  22       ANDI  R3,>FC00    ; flags of CLR
     1C0E FC00 
0943 1C10 0702  14       SETO R2
0944 1C12 045B  20       RT
0945               DO_INCT_DECT
0946 1C14 05C1  14       INCT R1
0947 1C16 02C3  12       STST  R3
0948 1C18 0243  22       ANDI  R3,>FC00    ; flags of INCT
     1C1A FC00 
0949 1C1C 0642  14       DECT R2
0950 1C1E 045B  20       RT
0951 1C20 06C2  14 DO_SWPB     SWPB R2
0952 1C22 045B  20       RT
0953 1C24 0281  22 DO_CI_ORI CI R1,0
     1C26 0000 
0954 1C28 02C3  12       STST  R3
0955 1C2A 0243  22       ANDI  R3,>FC00    ; flags of INCT
     1C2C FC00 
0956 1C2E 0262  22       ORI R2,0
     1C30 0000 
0957 1C32 045B  20       RT
0958               DO_STCR
0959 1C34 020C  20       LI R12,6    ; read from 6 kbd scan
     1C36 0006 
0960 1C38 34C2  64       STCR R2,3
0961 1C3A 045B  20       RT
0962               DO_LDCR
0963 1C3C 020C  20       LI R12,>24  ; write to >24 kbd row
     1C3E 0024 
0964 1C40 30C2  56       LDCR R2,3
0965 1C42 045B  20       RT
0966               DO_STCR2
0967 1C44 020C  20       LI R12,6    ; read from 6 kbd scan
     1C46 0006 
0968 1C48 3602  64       STCR R2,8
0969 1C4A 045B  20       RT
0970               DO_LDCR2
0971 1C4C 020C  20       LI R12,>24  ; write to >24 kbd row
     1C4E 0024 
0972 1C50 3202  56       LDCR R2,8
0973 1C52 045B  20       RT
0974               DO_STCR3
0975 1C54 020C  20       LI R12,6    ; read from 6 kbd scan
     1C56 0006 
0976 1C58 3402  64       STCR R2,0
0977 1C5A 045B  20       RT
0978               DO_LDCR3
0979 1C5C 020C  20       LI R12,>24  ; write to >24 kbd row
     1C5E 0024 
0980 1C60 3002  56       LDCR R2,0
0981 1C62 045B  20       RT
0982               DO_STCR4
0983 1C64 020C  20       LI R12,6    ; read from 6 kbd scan
     1C66 0006 
0984 1C68 3442  64       STCR R2,1
0985 1C6A 045B  20       RT
0986               DO_LDCR4
0987 1C6C 020C  20       LI R12,>24  ; write to >24 kbd row
     1C6E 0024 
0988 1C70 3042  56       LDCR R2,1
0989 1C72 045B  20       RT
0990               SLAST  END  BOOT
